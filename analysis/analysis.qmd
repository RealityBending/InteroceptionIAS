---
title: "Revised Interoceptive Accuracy Scale (IAS-R)"
subtitle: "Analysis"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: true
    toc: true
    fig-dpi: 300
    fig-width: 11.33
execute: 
  cache: true
---

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(lavaan)
library(ggraph)
library(tidySEM)
library(EGAnet)
```

## Study 1 - Reanalysis of Murphy et al. (2020)

Reanalyze their data to confirm the factor structure of the IAS.

### Data Preparation

```{r}
# Murphy (https://osf.io/3m5nh)
df1a <- haven::read_sav("../data/Murphy2020/Study 1.sav") |>
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(Gender == 1, "Male", ifelse(Gender == 2, "Female", "Other"))))

df1b <- haven::read_sav("../data/Murphy2020/Study 6 IAS.sav") |>
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(Gender == 1, "Male", ifelse(Gender == 2, "Female", "Other"))))

# Gaggero (2021) (https://osf.io/5x9sg)
load("../data/Gaggero2021/data.rda")
df2 <- data |> 
  mutate_all(as.numeric) |>
  rename(
    Gender=gender, Age=age, Heart = `IAS 1`, Hungry = `IAS 2`, Breathing = `IAS 3`, Thirsty = `IAS 4`,
    Urinate = `IAS 5`, Defecate = `IAS 6`, Taste = `IAS 7`, Vomit = `IAS 8`, Sneeze = `IAS 9`,
    Cough = `IAS 10`, Temp = `IAS 11`, Sex_arousal = `IAS 12`, Wind = `IAS 13`, Burp = `IAS 14`,
    Muscles = `IAS 15`, Bruise = `IAS 16`, Pain = `IAS 17`, Blood_Sugar = `IAS 18`,
    Affective_touch = `IAS 19`, Tickle = `IAS 20`, Itch = `IAS 21`)

# Campos (2022) - Study 1 (https://osf.io/j6ef3)
df3 <- haven::read_sav("../data/Campos2022/Dataset_Test.sav") |>
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(Sex == 1, "Male", ifelse(Sex == 0, "Female", "Other")))) |>
  rename(
    Heart = IAS1, Hungry = IAS2, Breathing = IAS3, Thirsty = IAS4,
    Urinate = IAS5, Defecate = IAS6, Taste = IAS7, Vomit = IAS8, Sneeze = IAS9,
    Cough = IAS10, Temp = IAS11, Sex_arousal = IAS12, Wind = IAS13, Burp = IAS14,
    Muscles = IAS15, Bruise = IAS16, Pain = IAS17, Blood_Sugar = IAS18,
    Affective_touch = IAS19, Tickle = IAS20, Itch = IAS21
  )

# Brand (2023) - Study 1 (https://osf.io/3f2h6/)
df4a <- haven::read_sav("../data/Brand2023/Data_Giessen.sav") |> 
  select(-COUNTRY_OTHER) |> 
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(SEX == 1, "Male", ifelse(SEX == 2, "Female", "Other")))) |> 
  rename(
    Age=AGE, Heart = IAS_01, Hungry = IAS_02, Breathing = IAS_03, Thirsty = IAS_04,
    Urinate = IAS_05, Defecate = IAS_06, Taste = IAS_07, Vomit = IAS_08, Sneeze = IAS_09,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21
  )

df4b <- haven::read_sav("../data/Brand2023/Data_Mainz.sav") |> 
  select(-COUNTRY_OTHER, -EDUCATION_OTHER) |> 
  mutate_all(as.numeric) |> 
  mutate(Gender = as.character(ifelse(GENDER == 2, "Male", ifelse(GENDER == 1, "Female", "Other")))) |> 
  rename(
    Age=AGE, Heart = IAS_01, Hungry = IAS_02, Breathing = IAS_03, Thirsty = IAS_04,
    Urinate = IAS_05, Defecate = IAS_06, Taste = IAS_07, Vomit = IAS_08, Sneeze = IAS_09,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21
  )
  
  
df4c <- haven::read_sav("../data/Brand2023/Data_PotVie.sav") |> 
  select(-ID) |> 
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(GENDER == 2, "Male", ifelse(GENDER == 1, "Female", "Other")))) |> 
  rename(
    Age=AGE, Heart = IA02_01, Hungry = IA02_02, Breathing = IA02_03, Thirsty = IA02_04,
    Urinate = IA02_05, Defecate = IA02_06, Taste = IA02_07, Vomit = IA02_08, Sneeze = IA02_09,
    Cough = IA02_10, Temp = IA02_11, Sex_arousal = IA02_12, Wind = IA02_13, Burp = IA02_14,
    Muscles = IA02_15, Bruise = IA02_16, Pain = IA02_17, Blood_Sugar = IA02_18,
    Affective_touch = IA02_19, Tickle = IA02_20, Itch = IA02_21
  )

# https://osf.io/3eztd
df5a <- haven::read_sav("../data/Lin2023/Study 1 & 3.sav") |>
  select(-sex) |> 
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(sex_dummy == 1, "Male", ifelse(sex_dummy == 0, "Female", "Other")))) |>
  rename(
    Age = age,
    Heart = Heart, Hungry = HUNGR, Breathing = BREAT, Thirsty = Thirs,
    Urinate = URINA, Defecate = Defec, Taste = TASTE, Vomit = VOMIT, Sneeze = Sneez,
    Cough = COUGH, Temp = TEMPE, Sex_arousal = SEXAR, Wind = WIND, Burp = Burp,
    Muscles = MUSCL, Bruise = Bruis, Pain = PAIN, Blood_Sugar = BloSu,
    Affective_touch = Touch, Itch = ITCH
  ) # No tickle because same Chinese character

# https://osf.io/3eztd
df5b <- haven::read_sav("../data/Lin2023/Study 2.sav") |>
  mutate(Gender = as.character(ifelse(Sex == "男", "Male", ifelse(Sex == "女", "Female", "Other")))) |>
  rename(
    Heart = Heart, Hungry = HUNGR, Breathing = BREAT, Thirsty = Thirs,
    Urinate = URINA, Defecate = Defec, Taste = TASTE, Vomit = VOMIT, Sneeze = Sneez,
    Cough = COUGH, Temp = TEMPE, Sex_arousal = SEXAR, Wind = WIND, Burp = Burp,
    Muscles = MUSCL, Bruise = Bruis, Pain = PAIN, Blood_Sugar = BloSu,
    Affective_touch = Touch, Itch = ITCH
  ) # No tickle because same Chinese character

df6a <- read.csv("https://raw.githubusercontent.com/RealityBending/IllusionGameReliability/main/data/preprocessed_questionnaires.csv") |>
  rename(
    Gender = Sex, Heart = Item_IAS_Interoception_1, Hungry = Item_IAS_Interoception_2,
    Breathing = Item_IAS_Interoception_3, Thirsty = Item_IAS_Interoception_4,
    Temp = Item_IAS_Interoception_5, Sex_arousal = Item_IAS_Interoception_6,
    Urinate = Item_IAS_Elimination_1, Defecate = Item_IAS_Elimination_2,
    Vomit = Item_IAS_Elimination_3, Wind = Item_IAS_Expulsion_1,
    Burp = Item_IAS_Expulsion_2, Sneeze = Item_IAS_Expulsion_3,
    Muscles = Item_IAS_Nociception_1, Bruise = Item_IAS_Nociception_2,
    Pain = Item_IAS_Nociception_3, Affective_touch = Item_IAS_Skin_1,
    Tickle = Item_IAS_Skin_2, Itch = Item_IAS_Skin_3
  ) |>
  filter(!is.na(Urinate))

df6b <- read.csv("https://raw.githubusercontent.com/DominiqueMakowski/PHQ4R/main/study2/data/data.csv") |>
  rename(
    Heart = IAS_1, Hungry = IAS_2, Breathing = IAS_3, Thirsty = IAS_4,
    Urinate = IAS_5, Defecate = IAS_6, Taste = IAS_7, Vomit = IAS_8, Sneeze = IAS_9,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21
  )
```


### Participants

- **Sample 1a**: Data from Murphy's (2020) [study 1](https://osf.io/3m5nh/?view_only=a68051df4abe4ecb992f22dc8c17f769), downloaded from OSF, included `r report::report_participants(df1a, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 1b**: Data from Murphy's (2020) [study 6](https://osf.io/3m5nh/?view_only=a68051df4abe4ecb992f22dc8c17f769), downloaded from OSF, included `r report::report_participants(df1b, age = "Age", sex = NA, gender = "Gender")`.
<!-- - **Sample 2**: Data from Campos' (2022) [study 1](https://osf.io/j6ef3), downloaded from OSF, included `r report::report_participants(df2, age = "Age", sex = NA, gender = "Gender")`. -->
<!-- - Sample 3: TODO -->
<!-- - **Sample 4a**: Data from Lin's (2023) [study 1 and 3](#ttps://osf.io/3eztd), downloaded from OSF, included `r report::report_participants(df4a, age = "Age", sex = NA, gender = "Gender")`. -->
<!-- - **Sample 4b**: Data from Lin's (2023) [study 2](#ttps://osf.io/3eztd), downloaded from OSF, included `r report::report_participants(df4b, age = "Age", sex = NA, gender = "Gender")`. -->
<!-- - **Sample 5a**: New dataset from [Makowski (under preparation)](https://raw.githubusercontent.com/RealityBending/IllusionGameReliability/main/data/preprocessed_questionnaires.csv), included `r report::report_participants(df5a, age = "Age", sex = NA, gender = "Gender")`. -->
<!-- - **Sample 5b**: New dataset from [Makowski (under preparation)](https://raw.githubusercontent.com/DominiqueMakowski/PHQ4R/main/study2/data/data.csv), included `r report::report_participants(df5b, age = "Age", sex = NA, gender = "Gender")`. -->

Total N = `r nrow(df1a) + nrow(df1b) + nrow(df2) + nrow(df3) + nrow(df4a) + nrow(df4b) + nrow(df4c) + nrow(df5a) + nrow(df5b) + nrow(df6a) + nrow(df6b)`.


### Descriptive

#### Distribution

The items with the differing distribution pattern (with a lower mode around 2/5) are "Affective Touch", "Blood Sugar" and "Bruise".

```{r}
vars <- c(
  "Heart", "Hungry", "Breathing", "Thirsty", "Urinate", "Defecate", "Taste", "Vomit", "Sneeze", "Cough", "Temp",
  "Sex_arousal", "Wind", "Burp", "Muscles", "Bruise", "Pain", "Blood_Sugar", "Affective_touch", "Tickle", "Itch"
)

dens1a <- estimate_density(select(df1a, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 1a")
dens1b <- estimate_density(select(df1b, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 1b")
dens2 <- estimate_density(select(df2, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 2")
dens3 <- estimate_density(select(df3, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 3")
dens4a <- estimate_density(select(df4a, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 4a")
dens4b <- estimate_density(select(df4b, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 4b")
dens4c <- estimate_density(select(df4c, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 4c")
dens5a <- estimate_density(select(df5a, all_of(setdiff(vars, "Tickle"))), method = "kernSmooth") |>
  mutate(Sample = "Sample 5a")
dens5b <- estimate_density(select(df5b, all_of(setdiff(vars, "Tickle"))), method = "kernSmooth") |>
  mutate(Sample = "Sample 5b")
dens6a <- estimate_density(select(df6a, all_of(setdiff(vars, c("Taste", "Cough", "Blood_Sugar")))), method = "kernSmooth") |>
  mutate(Sample = "Sample 6a")
dens6b <- estimate_density(select(df6b, all_of(vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 6b")


p1 <- rbind(dens1a, dens1b, dens2, dens3, dens4a, dens4b, dens4c, dens5a, dens5b, dens6a, dens6b) |>
  # mutate(Dashed = ifelse(Parameter %in% c("Affective_touch", "Blood_Sugar", "Bruise"), TRUE, FALSE)) |> 
  ggplot(aes(x = x, y = y, color = Parameter)) +
  geom_line() +
  scale_color_material_d() +
  scale_linetype_manual(values = c("solid", "dashed"), guide="none") +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        plot.title = element_text(face="bold")) +
  labs(title = "Distribution of responses for all items across various datasets", x = "Response", y = "Density", color = "Item") +
  facet_wrap(~Sample, scales = "free", nrow = 4)

ggsave("figures/Figure1.png", p1, width=10, height=10, dpi=200, bg="white")
p1
```


```{r}
data1a <- normalize(select(df1a, all_of(dens1a$Parameter)), range = c(1, 5))
data1b <- normalize(select(df1b, all_of(dens1b$Parameter)), range = c(1, 5))
data2 <- normalize(select(df2, all_of(dens2$Parameter)), range = c(1, 5))
data3 <- normalize(select(df3, all_of(dens3$Parameter)), range = c(1, 5))
data4a <- normalize(select(df4a, all_of(dens4a$Parameter)), range = c(1, 5))
data4b <- normalize(select(df4b, all_of(dens4b$Parameter)), range = c(1, 5))
data4c <- normalize(select(df4c, all_of(dens4c$Parameter)), range = c(1, 5))
data5a <- normalize(select(df5a, all_of(dens5a$Parameter)), range = c(1, 5))
data5b <- normalize(select(df5b, all_of(dens5b$Parameter)), range = c(1, 5))
data6a <- select(df6a, all_of(dens6a$Parameter))
data6b <- select(df6b, all_of(dens6b$Parameter))

data_all <- rbind(
  data1a, data1b, data2, data3, data4a, data4b, data4c,
  mutate(data5a, Tickle = NA), mutate(data5b, Tickle = NA),
  mutate(data6a, Taste = NA, Cough = NA, Blood_Sugar = NA), data6b
)
```


#### Correlations

An overall positive intercorrelation pattern, with no clear structure emerging.

::: {.panel-tabset}

##### All data

```{r}
make_correlation <- function(df) {
  correlation::correlation(df, redundant = TRUE) |>
    correlation::cor_sort() |>
    correlation::cor_lower() |>
    mutate(val = paste0(insight::format_value(r), format_p(p, stars_only = TRUE))) |>
    mutate(Parameter2 = fct_rev(Parameter2)) |>
    ggplot(aes(x = Parameter1, y = Parameter2)) +
    geom_tile(aes(fill = r), color = "white") +
    geom_text(aes(label = val), size = 3) +
    labs(title = "Correlation Matrix") +
    scale_fill_metro_c(limit = c(0, 0.75), guide = guide_colourbar(ticks = FALSE)) +
    theme_minimal() +
    theme(
      legend.title = element_blank(),
      axis.title.x = element_blank(),
      axis.title.y = element_blank(),
      axis.text.x = element_text(angle = 45, hjust = 1)
    )
}

make_correlation(data_all)
```


##### Sample 1a

```{r}
make_correlation(data1a)
```

##### Sample 1b

```{r}
make_correlation(data1b)
```


##### Sample 2

```{r}
make_correlation(data2)
```


##### Sample 3

```{r}
make_correlation(data3)
```

##### Sample 4a

```{r}
make_correlation(data4a)
```

##### Sample 4b

```{r}
make_correlation(data4b)
```

##### Sample 4c

```{r}
make_correlation(data4c)
```

##### Sample 5a

```{r}
make_correlation(data5a)
```

##### Sample 5b

```{r}
make_correlation(data5b)
```


##### Sample 6a

```{r}
make_correlation(data6a)
```

##### Sample 6b

```{r}
make_correlation(data6b)
```


:::


### Graph Analysis

Exploratory Graph Analysis (EGA) is a recently developed framework for psychometric assessment, that can be used to estimate the number of dimensions in questionnaire data using network estimation methods and community detection algorithms, and assess the stability of dimensions and items using bootstrapping.
See https://r-ega.net/articles/ega.html for details.

#### Unique Variable Analysis (UVA)

Unique Variable Analysis (Christensen, Garrido, & Golino, 2023) uses the weighted topological overlap measure (Nowick et al., 2009) on an estimated network. Values greater than 0.25 are determined to have considerable local dependence (i.e., redundancy) that should be handled (variables with the highest maximum weighted topological overlap to all other variables (other than the one it is redundant with) should be removed).

::: {.panel-tabset}

##### All data

```{r}
uva <- EGAnet::UVA(data = data_all, cut.off = 0.3)
uva
uva$keep_remove
```


##### Sample 1

```{r}
uva <- EGAnet::UVA(data = data1, cut.off = 0.3)
uva
uva$keep_remove
```

##### Sample 2 

```{r}
uva <- EGAnet::UVA(data = data2, cut.off = 0.3)
uva
uva$keep_remove
```

##### Sample 3

```{r}
uva <- EGAnet::UVA(data = data3, cut.off = 0.3)
uva
uva$keep_remove
```

##### Sample 4

```{r}
uva <- EGAnet::UVA(data = data4, cut.off = 0.3)
uva
uva$keep_remove
```

##### Sample 5 

```{r}
uva <- EGAnet::UVA(data = data5, cut.off = 0.3)
uva
uva$keep_remove
```

##### Sample 6

```{r}
uva <- EGAnet::UVA(data = data6, cut.off = 0.3)
uva
uva$keep_remove
```

##### Sample 7

```{r}
uva <- EGAnet::UVA(data = data7, cut.off = 0.3)
uva
uva$keep_remove
```


:::

#### Networks

::: {.panel-tabset}

##### All data


```{r ega1}
#| fig-height: 20
#| fig-width: 12

make_egas <- function(data) {
  egas <- list()
  for (model in c("glasso", "TMFG")) {
    for (algo in c("walktrap", "louvain")) {
      for (type in c("ega", "ega.fit")) { # "hierega"
        if (type == "ega.fit" & algo == "louvain") next # Too slow
        egas[[paste0(model, "_", algo, "_", type)]] <- EGAnet::bootEGA(
          data = data,
          seed = 123,
          model = model,
          algorithm = algo,
          EGA.type = type,
          type = "resampling",
          plot.itemStability = FALSE,
          verbose = FALSE
        )
      }
    }
  }

  p <- EGAnet::compare.EGA.plots(
    egas$glasso_walktrap_ega, egas$glasso_walktrap_ega.fit,
    egas$glasso_louvain_ega, egas$TMFG_louvain_ega,
    egas$TMFG_walktrap_ega, egas$TMFG_walktrap_ega.fit,
    labels = c(
      "glasso_walktrap_ega", "glasso_walktrap_ega.fit",
      "glasso_louvain_ega", "TMFG_louvain_ega",
      "TMFG_walktrap_ega", "TMFG_walktrap_ega.fit"
    ),
    rows = 3,
    plot.all = FALSE
  )$all
  list(egas = egas, p = p)
}


egas_all <- make_egas(data_all)
egas_all$p
```

##### Sample 1a

```{r}
egas1 <- make_egas(data1a)
egas1$p
```

##### Sample 1b

```{r}
egas2 <- make_egas(data1b)
egas2$p
```

##### Sample 3

```{r}
egas3 <- make_egas(data3)
egas3$p
```

##### Sample 4

```{r}
egas4 <- make_egas(data4)
egas4$p
```

##### Sample 5

```{r}
egas5 <- make_egas(data5)
egas5$p
```

##### Sample 6

```{r}
egas6 <- make_egas(data6)
egas6$p
```

##### Sample 7

```{r}
egas7 <- make_egas(data7)
egas7$p
```


:::


#### Structure Stability

::: {.panel-tabset}

```{r}
#| fig-height: 20
#| fig-width: 12

patchwork::wrap_plots(lapply(egas_all$egas, plot), nrow = 3)
```

:::

#### Scores

```{r}
ega <- egas_all$egas$glasso_louvain_ega$EGA
plot(ega)

ega_scores_1 <- EGAnet::net.scores(data1, ega)$scores$std.scores |>
  as.data.frame() |>
  setNames(c("EGA1", "EGA2", "EGA3", "EGA4"))

ega_scores_2 <- EGAnet::net.scores(data2, ega)$scores$std.scores |>
  as.data.frame() |>
  setNames(c("EGA1", "EGA2", "EGA3", "EGA4"))

ega_scores_3 <- EGAnet::net.scores(data3, ega)$scores$std.scores |>
  as.data.frame() |>
  setNames(c("EGA1", "EGA2", "EGA3", "EGA4"))

ega_scores_4 <- EGAnet::net.scores(data4, ega)$scores$std.scores |>
  as.data.frame() |>
  setNames(c("EGA1", "EGA2", "EGA3", "EGA4"))

ega_scores_5 <- EGAnet::net.scores(data5, ega)$scores$std.scores |>
  as.data.frame() |>
  setNames(c("EGA1", "EGA2", "EGA3", "EGA4"))

ega_scores_6 <- EGAnet::net.scores(data6, ega)$scores$std.scores |>
  as.data.frame() |>
  setNames(c("EGA1", "EGA2", "EGA3", "EGA4"))

ega_scores_7 <- EGAnet::net.scores(data7, ega)$scores$std.scores |>
  as.data.frame() |>
  setNames(c("EGA1", "EGA2", "EGA3", "EGA4"))
```


### Factor Analysis 

#### How Many Factors

::: {.panel-tabset}

##### All data

```{r}
n <- parameters::n_factors(data_all, n_max = 12)

plot(n)

knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4, 5), ], row.names = FALSE)
```

##### Sample 1

```{r}
n <- parameters::n_factors(data1, n_max = 12)

plot(n)
knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4), ], row.names = FALSE)
```

##### Sample 2

```{r}
n <- parameters::n_factors(data2, n_max = 12)

plot(n)
knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4), ], row.names = FALSE)
```

##### Sample 3

```{r}
n <- parameters::n_factors(data3, n_max = 12)

plot(n)

knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4), ], row.names = FALSE)
```

##### Sample 4

```{r}
n <- parameters::n_factors(data4, n_max = 12)

plot(n)

knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4), ], row.names = FALSE)
```


##### Sample 5

```{r}
n <- parameters::n_factors(data5, n_max = 12)

plot(n)

knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4), ], row.names = FALSE)
```


##### Sample 6

```{r}
n <- parameters::n_factors(data6, n_max = 12)

plot(n)

knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4), ], row.names = FALSE)
```

##### Sample 7

```{r}
n <- parameters::n_factors(data7, n_max = 12)

plot(n)

knitr::kable(as.data.frame(n)[n$n_Factors %in% c(1, 4), ], row.names = FALSE)
```

:::



#### EFA

::: {.panel-tabset}

##### All data

```{r}
#| fig-height: 10

efa5 <- parameters::factor_analysis(data_all, n = 5, rotation = "oblimin", sort = TRUE)
plot(efa5)

display(efa5)
```


##### Sample 1

```{r}
#| fig-height: 10

efa4 <- parameters::factor_analysis(data2, n = 4, rotation = "oblimin", sort = TRUE)
plot(efa4)

display(efa4)
```

##### Sample 2

```{r}
#| fig-height: 10

efa4 <- parameters::factor_analysis(data2, n = 4, rotation = "oblimin", sort = TRUE)
plot(efa4)

display(efa4)
```

##### Sample 3

```{r}
#| fig-height: 10

efa4 <- parameters::factor_analysis(data3, n = 4, rotation = "oblimin", sort = TRUE)
plot(efa4)

display(efa4)
```

##### Sample 4

```{r}
#| fig-height: 10

efa5 <- parameters::factor_analysis(data4, n = 5, rotation = "oblimin", sort = TRUE)
plot(efa5)

display(efa5)
```

##### Sample 5

```{r}
#| fig-height: 10

efa5 <- parameters::factor_analysis(data5, n = 5, rotation = "oblimin", sort = TRUE)
plot(efa5)

display(efa5)
```

##### Sample 6

```{r}
#| fig-height: 10

efa4 <- parameters::factor_analysis(data6, n = 4, rotation = "oblimin", sort = TRUE)
plot(efa4)

display(efa4)
```

##### Sample 7

```{r}
#| fig-height: 10

efa4 <- parameters::factor_analysis(data7, n = 4, rotation = "oblimin", sort = TRUE)
plot(efa4)

display(efa4)
```

:::


### CFA

#### Structure 


::: {.panel-tabset}

##### All data

```{r}
# Ambiguous: Temp + Vomit + Affective_touch + Sex_arousal + Taste
# Discard: Tickle + Blood_Sugar

m1 <- "
Interoception =~ Hungry + Thirsty + Urinate + Defecate + Itch + Bruise + Muscles + Pain + Breathing + Heart + Cough + Sneeze + Wind + Burp
"

m4 <- "
Sustenance =~ Hungry + Thirsty + Urinate + Defecate + Muscles + Pain
Skin =~ Itch + Bruise
HeartBreathing =~ Breathing + Heart
Expulsion =~ Cough + Sneeze + Wind + Burp
"


m5 <- "
Sustenance =~ Hungry + Thirsty + Pain
UrinateDefecate =~ Urinate + Defecate
Skin =~ Itch + Bruise + Muscles
HeartBreathing =~ Breathing + Heart
Expulsion =~ Cough + Sneeze + Wind + Burp
"


m6 <- "
HungryThirsty =~ Hungry + Thirsty
UrinateDefecate =~ Urinate + Defecate
ItchBruise =~ Itch + Bruise
MusclesPain =~ Muscles + Pain
HeartBreathing =~ Breathing + Heart
Expulsion =~ Cough + Sneeze + Wind + Burp
"

m7 <- "
HungryThirsty =~ Hungry + Thirsty
UrinateDefecate =~ Urinate + Defecate
ItchBruise =~ Itch + Bruise
MusclesPain =~ Muscles + Pain
HeartBreathing =~ Breathing + Heart
CoughSneeze =~ Cough + Sneeze
WindBurp =~ Wind + Burp
"

m1_all <- lavaan::cfa(m1, data = data_all)
m4_all <- lavaan::cfa(m4, data = data_all)
m5_all <- lavaan::cfa(m5, data = data_all)
m6_all <- lavaan::cfa(m6, data = data_all)
m7_all <- lavaan::cfa(m7, data = data_all)

anova(m1_all, m4_all, m5_all, m6_all, m7_all) |>
  parameters::parameters() |>
  display()

parameters::parameters(m7_all, standardize=TRUE) |>
  display()
```

##### Sample 1

```{r}
anova(
  lavaan::cfa(m1, data = data1),
  lavaan::cfa(m4, data = data1),
  lavaan::cfa(m5, data = data1),
  lavaan::cfa(m6, data = data1),
  lavaan::cfa(m7, data = data1)
  ) |>
  parameters::parameters() |>
  display()
```

##### Sample 2

```{r}
anova(
  lavaan::cfa(m1, data = data2),
  lavaan::cfa(m4, data = data2),
  lavaan::cfa(m5, data = data2),
  lavaan::cfa(m6, data = data2),
  lavaan::cfa(m7, data = data2)
  ) |>
  parameters::parameters() |>
  display()
```


##### Sample 3

```{r}
anova(
  lavaan::cfa(m1, data = data3),
  lavaan::cfa(m4, data = data3),
  lavaan::cfa(m5, data = data3),
  lavaan::cfa(m6, data = data3),
  lavaan::cfa(m7, data = data3)
  ) |>
  parameters::parameters() |>
  display()
```


##### Sample 4

```{r}
anova(
  lavaan::cfa(m1, data = data4),
  lavaan::cfa(m4, data = data4),
  lavaan::cfa(m5, data = data4),
  lavaan::cfa(m6, data = data4),
  lavaan::cfa(m7, data = data4)
  ) |>
  parameters::parameters() |>
  display()
```


##### Sample 5

```{r}
anova(
  lavaan::cfa(m1, data = data5),
  lavaan::cfa(m4, data = data5),
  lavaan::cfa(m5, data = data5),
  lavaan::cfa(m6, data = data5),
  lavaan::cfa(m7, data = data5)
  ) |>
  parameters::parameters() |>
  display()
```


##### Sample 6

```{r}
anova(
  lavaan::cfa(m1, data = data6),
  lavaan::cfa(m4, data = data6),
  lavaan::cfa(m5, data = data6),
  lavaan::cfa(m6, data = data6),
  lavaan::cfa(m7, data = data6)
  ) |>
  parameters::parameters() |>
  display()
```

##### Sample 7

```{r}
anova(
  lavaan::cfa(str_remove(m5, fixed("Cough + ")), data = data7),
  lavaan::cfa(str_remove(m1, fixed("Cough + ")), data = data7),
  lavaan::cfa(str_remove(m4, fixed("Cough + ")), data = data7),
  lavaan::cfa(str_remove(m6, fixed("Cough + ")), data = data7),
  lavaan::cfa(str_remove(m7, fixed("\nCoughSneeze =~ Cough + Sneeze")), data = data7)
  ) |>
  parameters::parameters() |>
  display()
```


:::

#### Higher Order Factors


::: {.panel-tabset}

##### All data

```{r}
m7h1 <- paste0(m7, "
              Interoception =~ HungryThirsty + UrinateDefecate + ItchBruise + MusclesPain + HeartBreathing + CoughSneeze + WindBurp
              ")

m7h3 <- paste0(m7, "
              Valenced =~ MusclesPain + HeartBreathing + ItchBruise
              Expulsion =~ CoughSneeze + WindBurp
              Homeostasis =~ HungryThirsty + UrinateDefecate
              ")

m7h1_all <- lavaan::cfa(m7h1, data = data_all)
m7h3_all <- lavaan::cfa(m7h3, data = data_all)
anova(m7_all, m7h1_all, m7h3_all) |>
  parameters::parameters() |>
  display()
```

##### Sample 1

```{r}
anova(
  lavaan::cfa(m7, data = data1), 
  lavaan::cfa(m7h1, data = data1), 
  lavaan::cfa(m7h3, data = data1)) |>
  parameters::parameters() |>
  display()
```

##### Sample 2

```{r}
anova(
  lavaan::cfa(m7, data = data2), 
  lavaan::cfa(m7h1, data = data2), 
  lavaan::cfa(m7h3, data = data2)) |>
  parameters::parameters() |>
  display()
```

##### Sample 3

```{r}
anova(
  lavaan::cfa(m7, data = data3), 
  lavaan::cfa(m7h1, data = data3), 
  lavaan::cfa(m7h3, data = data3)) |>
  parameters::parameters() |>
  display()
```

##### Sample 4

```{r}
anova(
  lavaan::cfa(m7, data = data4), 
  lavaan::cfa(m7h1, data = data4), 
  lavaan::cfa(m7h3, data = data4)) |>
  parameters::parameters() |>
  display()
```


##### Sample 5

```{r}
anova(
  lavaan::cfa(m7, data = data5), 
  lavaan::cfa(m7h1, data = data5), 
  lavaan::cfa(m7h3, data = data5)) |>
  parameters::parameters() |>
  display()
```


##### Sample 6

```{r}
anova(
  lavaan::cfa(m7, data = data6), 
  lavaan::cfa(m7h1, data = data6), 
  lavaan::cfa(m7h3, data = data6)) |>
  parameters::parameters() |>
  display()
```


##### Sample 7

None of the model can be properly estimated (variances are negative).

```{r}
NA
# anova(
#   lavaan::cfa(str_remove(m7, fixed("\nCoughSneeze =~ Cough + Sneeze")), data = data7), 
#   lavaan::cfa(str_remove(str_remove(m7h1, fixed("\nCoughSneeze =~ Cough + Sneeze")), fixed("CoughSneeze +")), data = data7), 
#   lavaan::cfa(str_remove(str_remove(m7h3, fixed("\nCoughSneeze =~ Cough + Sneeze")), fixed("CoughSneeze +")), data = data7)) |>
#   parameters::parameters() |>
#   display()
```


:::

#### Model Performance

```{r}
#| warning: false

rbind(
  performance::performance(m7_all, metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "All"),
  performance::performance(update(m7_all, data = data1), metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "Sample 1"),
  performance::performance(update(m7_all, data = data2), metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "Sample 2"),
  performance::performance(update(m7_all, data = data3), metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "Sample 3"),
  performance::performance(update(m7_all, data = data4), metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "Sample 4"),
  performance::performance(update(m7_all, data = data5), metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "Sample 5"),
  performance::performance(update(m7_all, data = data6), metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "Sample 6"),
  performance::performance(lavaan::cfa(str_remove(m7, fixed("\nCoughSneeze =~ Cough + Sneeze")), data = data7), metrics = c("Chi2", "RMSEA", "CFI", "SRMR")) |>
    mutate(Sample = "Sample 7")
) |>
  display()
```



No evidence for higher order factors.


### Scores

Note the usage of descriptive factor names relating directly to the items to avoid abstraction.

```{r}
#| warning: false

scores <- list(
  sample1 = cbind(ega_scores_1, as.data.frame(predict(lavaan::cfa(m7, data = data1)))) |>
    mutate(Sample = "Sample 1"),
  sample2 = cbind(ega_scores_2, as.data.frame(predict(lavaan::cfa(m7, data = data2)))) |>
    mutate(Sample = "Sample 2"),
  sample3 = cbind(ega_scores_3, as.data.frame(predict(lavaan::cfa(m7, data = data3)))) |>
    mutate(Sample = "Sample 3"),
  sample4 = cbind(ega_scores_4, as.data.frame(predict(lavaan::cfa(m7, data = data4)))) |>
    mutate(Sample = "Sample 4"),
  sample5 = cbind(ega_scores_5, as.data.frame(predict(lavaan::cfa(m7, data = data5)))) |>
    mutate(Sample = "Sample 5"),
  sample6 = cbind(ega_scores_6, as.data.frame(predict(lavaan::cfa(m7, data = data6)))) |>
    mutate(Sample = "Sample 6"),
  sample7 = cbind(ega_scores_7, as.data.frame(predict(lavaan::cfa(str_remove(m7, fixed("\nCoughSneeze =~ Cough + Sneeze")), data = data7)))) |>
    mutate(Sample = "Sample 7", CoughSneeze = NA)
)
  
save(scores, file = "../data/scores.RData")
```



## Study 2 - Correlates

```{r}
#| warning: false

load("../data/scores.RData")

df1a <- cbind(df1a, scores$sample1)
df1b <- cbind(df1b, scores$sample2)
df3 <- cbind(df3, scores$sample3)
df4a <- cbind(df4a, scores$sample4)
df4b <- cbind(df4b, scores$sample5)
df5b <- cbind(df5b, scores$sample6)
df5a <- cbind(df5a, scores$sample7)

vars_intero <- names(select(scores$sample1, -Sample))
vars_cfa <- names(select(scores$sample1, -Sample, -starts_with("EGA")))
vars_cfa7 <- vars_cfa[vars_cfa != "CoughSneeze"]

# names(df1a)
# names(df1b)
# names(df3)  # TAS, BPQ
# names(df4a)  # BPQ
# names(df4b)  # PHQ, TAS
# names(df5b)  # BDI, STAI
# names(df5a)  # MAIA, PHQ4, PI, LIE, IPIP, PID, SPQ
```

### EGA and CFA

```{r}
#| warning: false

df_scores <- rbind(
  select(df1a, all_of(vars_intero)),
  select(df1b, all_of(vars_intero)),
  select(df3, all_of(vars_intero)),
  select(df4a, all_of(vars_intero)),
  select(df4b, all_of(vars_intero)),
  select(df5b, all_of(vars_intero)),
  select(df5a, all_of(vars_intero))
)

correlation::correlation(df_scores, redundant = TRUE) |>
    correlation::cor_sort() |>
    correlation::cor_lower() |>
    mutate(val = paste0(insight::format_value(r), format_p(p, stars_only = TRUE))) |>
    mutate(Parameter2 = fct_rev(Parameter2)) |>
    ggplot(aes(x = Parameter1, y = Parameter2)) +
    geom_tile(aes(fill = r), color = "white") +
    geom_text(aes(label = val), size = 3) +
    labs(title = "Correlation Matrix") +
    scale_fill_metro_c(limit = c(0, 1), guide = guide_colourbar(ticks = FALSE)) +
    theme_minimal() +
    theme(
      legend.title = element_blank(),
      axis.title.x = element_blank(),
      axis.title.y = element_blank(),
      axis.text.x = element_text(angle = 45, hjust = 1)
    )
```


### Demographics

```{r}
make_diff <- function(df, vars, component=NA) {
  dat <- data.frame()
  for (resp in vars) {
    f <- as.formula(paste0(resp, "~ Gender"))
    d <- filter(df, Gender %in% c("Male", "Female")) |> 
      mutate(Gender = fct_relevel(Gender, "Male", "Female"))
    dat <- effectsize::cohens_d(f, data=d) |> 
      mutate(var_Correlate = "Gender", var_Interoception = resp, 
             p=t.test(f, data=d)$p.val) |> 
      as.data.frame() |> 
      rbind(dat)
  }
    
  dat$r <- effectsize::d_to_r(dat$Cohens_d, n1=sum(df$Gender=="Male"), n2=sum(df$Gender=="Female"))
  dat$CI_low <- effectsize::d_to_r(dat$CI_low, n1=sum(df$Gender=="Male"), n2=sum(df$Gender=="Female"))
  dat$CI_high <- effectsize::d_to_r(dat$CI_high, n1=sum(df$Gender=="Male"), n2=sum(df$Gender=="Female"))
  dat$Sample <- unique(df$Sample)
  dat$Component <- component
  select(dat, -Cohens_d)
}

data <- rbind(
  make_diff(df1a, vars_cfa, component="Demographic"),
  make_diff(df1b, vars_cfa, component="Demographic"),
  make_diff(df3, vars_cfa, component="Demographic"),
  make_diff(df4a, vars_cfa, component="Demographic"),
  make_diff(df4b, vars_cfa, component="Demographic"),
  make_diff(df5b, vars_cfa, component="Demographic"),
  make_diff(df5a, vars_cfa7, component="Demographic")
) |> 
  mutate(var_Correlate = "Gender (Male vs. Female)")
```


```{r}
make_cor <- function(df, vars, with = "Age", component=NA) {
  dat <- data.frame() 
  for (v in vars) {
    dat <- correlation::cor_test(df, v, with) |> 
      rename(var_Interoception = Parameter1, var_Correlate = Parameter2) |> 
      as.data.frame() |> 
      rbind(dat)
  }
    
  dat$Sample <- unique(df$Sample)
  dat$Component <- component
  select(dat, -df_error, -t, -Method, -n_Obs)
}

data <- rbind(
  data,
  make_cor(df1a, vars_cfa, with = "Age", component="Demographic"),
  make_cor(df1b, vars_cfa, with = "Age", component="Demographic"),
  make_cor(df3, vars_cfa, with = "Age", component="Demographic"),
  make_cor(df4a, vars_cfa, with = "Age", component="Demographic"),
  make_cor(df4b, vars_cfa, with = "Age", component="Demographic"),
  make_cor(df5b, vars_cfa, with = "Age", component="Demographic"),
  make_cor(df5a, vars_cfa7, with = "Age", component="Demographic")
) 
```



### Body

```{r}
# Reverse (TODO: Ana confirm why)
df3$BPQ_BodyAwareness <- -1*normalize(df3$BPQ_BodyAwareness)
df3$BPQ_AutonomicReactivity <- -1*normalize(df3$BPQ_AutonomicReactivity)

data <- rbind(
  data,
  make_cor(df3, vars_cfa, with = "BPQ_BodyAwareness", component="Body") |> 
    mutate(var_Correlate = "Body Awareness"),
  make_cor(df3, vars_cfa, with = "BPQ_AutonomicReactivity", component="Body") |> 
    mutate(var_Correlate = "Autonomic Reactivity"),
  make_cor(df4a, vars_cfa, with = "BPQ_A", component="Body") |> 
    mutate(var_Correlate = "Body Awareness")
)
```

```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "MAIA_AttentionRegulation", component="MAIA")  |> 
    mutate(var_Correlate = "Attention Regulation"),
  make_cor(df5a, vars_cfa7, with = "MAIA_BodyListening", component="MAIA") |> 
    mutate(var_Correlate = "Body Listening"),
  make_cor(df5a, vars_cfa7, with = "MAIA_EmotionalAwareness", component="MAIA") |> 
    mutate(var_Correlate = "Emotional Awareness"),
  make_cor(df5a, vars_cfa7, with = "MAIA_NotDistracting", component="MAIA") |> 
    mutate(var_Correlate = "Not Distracting"),
  make_cor(df5a, vars_cfa7, with = "MAIA_Noticing", component="MAIA") |> 
    mutate(var_Correlate = "Noticing"),
  make_cor(df5a, vars_cfa7, with = "MAIA_NotWorrying", component="MAIA") |> 
    mutate(var_Correlate = "Not Worrying"),
  make_cor(df5a, vars_cfa7, with = "MAIA_SelfRegulation", component="MAIA") |> 
    mutate(var_Correlate = "Self Regulation"),
  make_cor(df5a, vars_cfa7, with = "MAIA_Trusting", component="MAIA") |> 
    mutate(var_Correlate = "Trusting")
)
```


```{r}
# names(df3)[str_detect(names(df3), "TAS")]
# names(df4b)[str_starts(names(df4b), "TAS")]

data <- rbind(
  data,
  make_cor(df3, vars_cfa, with = "TAS_IdentifyingFeelings", component="Body") |> 
    mutate(var_Correlate = "Difficulties Identifying Feelings"),
  make_cor(df3, vars_cfa, with = "TAS_DescribingFeelings", component="Body") |> 
    mutate(var_Correlate = "Difficulties Describing Feelings"),
  make_cor(df3, vars_cfa, with = "TAS_ExternallyOrientedThinking", component="Body") |> 
    mutate(var_Correlate = "External Thinking"),
  make_cor(df4b, vars_cfa, with = "TAS_DIF", component="Body") |> 
    mutate(var_Correlate = "Difficulties Identifying Feelings"),
  make_cor(df4b, vars_cfa, with = "TAS_DDF", component="Body") |> 
    mutate(var_Correlate = "Difficulties Describing Feelings")
)
```

### Mood

```{r}
data <- rbind(
  data,
  make_cor(df4b, vars_cfa, with = "PHQ15_sum", component="Mood") |> 
    mutate(var_Correlate = "Somatic Concerns (PHQ-15)"),
  make_cor(df4b, vars_cfa, with = "PHQ9_sum", component="Mood")|> 
    mutate(var_Correlate = "Depression (PHQ-9)"),
  make_cor(df5a, vars_cfa7, with = "PHQ4_Depression", component="Mood") |> 
    mutate(var_Correlate = "Depression (PHQ-4)"),
  make_cor(df5a, vars_cfa7, with = "PHQ4_Anxiety", component="Mood") |> 
    mutate(var_Correlate = "Anxiety (PHQ-4)")
)
```

```{r}
data <- rbind(
  data,
  make_cor(df5b, vars_cfa, with = "BDI2_Total", component="Mood") |> 
    mutate(var_Correlate = "Depression (BDI-II)")
)
```

```{r}
data <- rbind(
  data,
  make_cor(df5b, vars_cfa, with = "STAI5_General", component="Mood") |> 
    mutate(var_Correlate = "Anxiety (STAI-5)")
)
```


```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "BPD", component="Mood") |> 
    mutate(var_Correlate = "Boderline Personality")
)
```


### Psychopathology


```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "PID5_Antagonism", component="Maladaptive") |> 
    mutate(var_Correlate = "Antagonism"),
  make_cor(df5a, vars_cfa7, with = "PID5_Detachment", component="Maladaptive") |> 
    mutate(var_Correlate = "Detachment"),
  make_cor(df5a, vars_cfa7, with = "PID5_Disinhibition", component="Maladaptive") |> 
    mutate(var_Correlate = "Disinhibition"),
  make_cor(df5a, vars_cfa7, with = "PID5_NegativeAffect", component="Maladaptive") |> 
    mutate(var_Correlate = "Negative Affect"),
  make_cor(df5a, vars_cfa7, with = "PID5_Psychoticism", component="Maladaptive") |> 
    mutate(var_Correlate = "Psychoticism")
)
```

```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "SPQ_ConstrictedAffect", component="Schizotypic") |> 
    mutate(var_Correlate = "Constricted Affect"),
  make_cor(df5a, vars_cfa7, with = "SPQ_Eccentric", component="Schizotypic") |> 
    mutate(var_Correlate = "Eccentric"),
  make_cor(df5a, vars_cfa7, with = "SPQ_MagicalThinking", component="Schizotypic") |> 
    mutate(var_Correlate = "Magical Thinking"),
  make_cor(df5a, vars_cfa7, with = "SPQ_NoCloseFriends", component="Schizotypic") |> 
    mutate(var_Correlate = "No Close Friends"),
  make_cor(df5a, vars_cfa7, with = "SPQ_OddSpeech", component="Schizotypic") |> 
    mutate(var_Correlate = "Odd Speech"),
  make_cor(df5a, vars_cfa7, with = "SPQ_Reference", component="Schizotypic") |> 
    mutate(var_Correlate = "Reference"),
  make_cor(df5a, vars_cfa7, with = "SPQ_SocialAnxiety", component="Schizotypic") |> 
    mutate(var_Correlate = "Social Anxiety"),
  make_cor(df5a, vars_cfa7, with = "SPQ_Suspiciousness", component="Schizotypic") |> 
    mutate(var_Correlate = "Suspiciousness"),
  make_cor(df5a, vars_cfa7, with = "SPQ_UnusualPerceptions", component="Schizotypic") |> 
    mutate(var_Correlate = "Unusual Perceptions")
)
```


```{r}
#  names(select(df5a, starts_with("ASQ")))
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "ASQ_Imagination", component="Autistic") |> 
    mutate(var_Correlate = "Imagination"),
  make_cor(df5a, vars_cfa7, with = "ASQ_LackSocialSkills", component="Autistic") |>
    mutate(var_Correlate = "Lack of Social Skills"),
  make_cor(df5a, vars_cfa7, with = "ASQ_LowAttentionalSwitching", component="Autistic") |>
    mutate(var_Correlate = "Low Attentional Switching"),
  make_cor(df5a, vars_cfa7, with = "ASQ_Patterns", component="Autistic") |>
    mutate(var_Correlate = "Patterns and Numbers"),
  make_cor(df5a, vars_cfa7, with = "ASQ_Routine", component="Autistic") |>
    mutate(var_Correlate = "Routines")
)
```


### Personality

```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "IPIP6_Agreeableness", component="Personality") |> 
    mutate(var_Correlate = "Agreeableness"),
  make_cor(df5a, vars_cfa7, with = "IPIP6_Conscientiousness", component="Personality") |>
    mutate(var_Correlate = "Conscientiousness"),
  make_cor(df5a, vars_cfa7, with = "IPIP6_Neuroticism", component="Personality") |>
    mutate(var_Correlate = "Neuroticism"),
  make_cor(df5a, vars_cfa7, with = "IPIP6_Openness", component="Personality") |>
    mutate(var_Correlate = "Openness"),
  make_cor(df5a, vars_cfa7, with = "IPIP6_Extraversion", component="Personality") |>
    mutate(var_Correlate = "Extraversion"),
  make_cor(df5a, vars_cfa7, with = "IPIP6_HonestyHumility", component="Personality") |>
    mutate(var_Correlate = "Honesty-Humility")
)
```

```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "PI_Alive", component="World Beliefs") |> 
    mutate(var_Correlate = "Alive"),
  make_cor(df5a, vars_cfa7, with = "PI_Changing", component="World Beliefs") |>
    mutate(var_Correlate = "Changing"),
  make_cor(df5a, vars_cfa7, with = "PI_Enticing", component="World Beliefs") |>
    mutate(var_Correlate = "Enticing"),
  make_cor(df5a, vars_cfa7, with = "PI_Good", component="World Beliefs") |>
    mutate(var_Correlate = "Good"),
  make_cor(df5a, vars_cfa7, with = "PI_Hierarchical", component="World Beliefs") |>
    mutate(var_Correlate = "Hierarchical"),
  make_cor(df5a, vars_cfa7, with = "PI_Safe", component="World Beliefs") |>
    mutate(var_Correlate = "Safe")
  # TODO: Add understanble
)
```

```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "GCBS_Extraterrestrial", component="Conspiracy Beliefs") |> 
    mutate(var_Correlate = "Extraterrestrial"),
  make_cor(df5a, vars_cfa7, with = "GCBS_GlobalConspiracies", component="Conspiracy Beliefs") |>
    mutate(var_Correlate = "Global Conspiracies"),
  make_cor(df5a, vars_cfa7, with = "GCBS_GovernmentMalfeasance", component="Conspiracy Beliefs") |>
    mutate(var_Correlate = "Government Malfeasance"),
  make_cor(df5a, vars_cfa7, with = "GCBS_InformationControl", component="Conspiracy Beliefs") |>
    mutate(var_Correlate = "Information Control"),
  make_cor(df5a, vars_cfa7, with = "GCBS_PersonalWellbeing", component="Conspiracy Beliefs") |>
    mutate(var_Correlate = "Personal Wellbeing")
)
```

```{r}
data <- rbind(
  data,
  make_cor(df5a, vars_cfa7, with = "LIE_Ability", component="Lying Profile") |> 
    mutate(var_Correlate = "Ability"),
  make_cor(df5a, vars_cfa7, with = "LIE_Frequency", component="Lying Profile") |>
    mutate(var_Correlate = "Frequency"),
  make_cor(df5a, vars_cfa7, with = "LIE_Contextuality", component="Lying Profile") |>
    mutate(var_Correlate = "Contextuality"),
  make_cor(df5a, vars_cfa7, with = "LIE_Negativity", component="Lying Profile") |>
    mutate(var_Correlate = "Negativity")
)
```

### Summary

```{r}
#| fig-height: 20
#| fig-width: 15

p <- data |>
  mutate(sig = ifelse(p < .01, "p < .01", ifelse(p < .001, "p < .001", "N.S.")),
         dir = sign(r),
         var_Interoception = str_replace(var_Interoception, "CoughSneeze", "Cough/Sneeze"),
         var_Interoception = str_replace(var_Interoception, "HeartBreathing", "Heart/Breathing"),
         var_Interoception = str_replace(var_Interoception, "HungryThirsty", "Hungry/Thirsty"),
         var_Interoception = str_replace(var_Interoception, "ItchBruise", "Itch/Bruise"),
         var_Interoception = str_replace(var_Interoception, "MusclesPain", "Muscles/Pain"),
         var_Interoception = str_replace(var_Interoception, "UrinateDefecate", "Urinate/Defecate"),
         var_Interoception = str_replace(var_Interoception, "WindBurp", "Wind/Burp"),
         var_Interoception = str_replace(var_Interoception, "Expulsion_Sudden", "Expulsion - Sudden"),
         var_Interoception = fct_relevel(var_Interoception, "Heart/Breathing", "Muscles/Pain", "Itch/Bruise", "Hungry/Thirsty", "Urinate/Defecate", "Wind/Burp", "Cough/Sneeze"),
         Component = fct_relevel(
           Component, "Demographic", "MAIA", "Body", "Mood", "Maladaptive",
           "Schizotypic", "Autistic", "Personality", "Conspiracy Beliefs", "World Beliefs", "Lying Profile")) |>
  ggplot(aes(x = var_Correlate)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  # geom_bar(aes(fill=Sample, alpha=sig, y=r, group=Sample), stat="identity", position = position_dodge2(width = 0.8)) +
  geom_linerange(aes(color=dir, alpha=sig, ymin=0, ymax=r, group=Sample), position = position_dodge2(width = 0.7), linewidth=2.5) +
  geom_linerange(aes(ymin = CI_low, ymax = CI_high, color = dir, alpha=sig, group=Sample), position = position_dodge2(width = 0.7)) +
  scale_fill_gradient(low = "#2196F3", high = "#FF5722", guide = "none") +
  scale_color_gradient(low = "#2196F3", high = "#FF5722", guide = "none") +
  scale_alpha_discrete(range = c(0.2, 0.7), guide = "none") +
  scale_y_continuous(expand = c(0, 0), breaks = c(-0.3, 0, 0.3)) +
  facet_grid(Component ~ var_Interoception, scales = "free_y", switch = "y") +
  coord_flip(ylim = c(-0.45, 0.45)) +
  theme_modern(axis.title.space = 5) +
  theme(panel.grid.major.y = element_line(),
        axis.title.y = element_blank(),
        axis.line.x = element_blank(),
        axis.text.y = element_text(size = rel(0.5)),
        axis.text.x = element_text(size = rel(0.8)),
        plot.title = element_text(face = "bold", hjust = 0),
        strip.placement = "outside",
        strip.background.y = element_rect(fill = "#E0E0E0", color = "white"),
        strip.background.x = element_rect(fill = "#F8BBD0", color = "white")) 
ggsave("figures/Figure2.png", p, width=21*0.6, height=29.7*0.45, dpi=200, bg="white")
p
```



## Discussion


Benefits of the IAS:
- Straightforward and sensation-centered items

Recommendations:
- Remove Itch (redundant + issue in Chinese)
- Use analog scales

Limitations:
- Not much clear theorethical or empirical structure (small grouping of items)
- Limited variability (clear mode at 4/5), very low prevalence of 5/5 responses.
- Ambiguous items which grouping depends on the context (and its awareness)
  - E.g., heart beating fast, vomit when nauseaous
- Few items for some modalities (e.g., 1 for heart)
- Positive phrasing: benefits but also might exacerbate positivity bias (and thus unidimensionality)

Need for context-specific items (cross-modal when possible, i.E., cardioception, respiroception, etc.).


New Scale: Multimodal Interoceptive Sensitivity Scale (MISS)
