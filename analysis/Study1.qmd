---
title: "Mega-analysis of the Interoceptive Accuracy Scale (IAS)"
subtitle: "Study 1"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: true
    toc: true
    fig-dpi: 100
    fig-width: 11.33
execute: 
  cache: true
---

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(lavaan)
library(ggraph)
library(tidySEM)
library(EGAnet)
library(haven)

ias_vars <- c(
  "Heart", "Hungry", "Breathing", "Thirsty", "Urinate", "Defecate", "Taste", "Vomit", "Sneeze", "Cough", "Temp",
  "Sex_arousal", "Wind", "Burp", "Muscles", "Bruise", "Pain", "Blood_Sugar", "Affective_touch", "Tickle", "Itch"
)
```

## Data Preparation

::: {.panel-tabset}

### Sample 1

- Murphy (2020)
  - https://osf.io/3m5nh

```{r}
df1a <- haven::read_sav("../data/Murphy2020/Study 1.sav") |>
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(Gender == 1, "Male", ifelse(Gender == 2, "Female", "Other"))))

df1b <- haven::read_sav("../data/Murphy2020/Study 6 IAS.sav") |>
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(Gender == 1, "Male", ifelse(Gender == 2, "Female", "Other"))))
```

### Sample 2

- Gaggero (2021) 
  - https://osf.io/5x9sg
  - BPQ_A = autonomic symptoms

```{r}
load("../data/Gaggero2021/data.rda")
df2 <- data |> 
  mutate(Gender = as.character(gender)) |> 
  mutate(across(starts_with("IAS "), as.numeric)) |>
  rename(
    Age=age, Heart = `IAS 1`, Hungry = `IAS 2`, Breathing = `IAS 3`, Thirsty = `IAS 4`,
    Urinate = `IAS 5`, Defecate = `IAS 6`, Taste = `IAS 7`, Vomit = `IAS 8`, Sneeze = `IAS 9`,
    Cough = `IAS 10`, Temp = `IAS 11`, Sex_arousal = `IAS 12`, Wind = `IAS 13`, Burp = `IAS 14`,
    Muscles = `IAS 15`, Bruise = `IAS 16`, Pain = `IAS 17`, Blood_Sugar = `IAS 18`,
    Affective_touch = `IAS 19`, Tickle = `IAS 20`, Itch = `IAS 21`,
    MAIA_Trusting = MAIA_BodyTrusting)
rm(data)


df2$BPQ_BodyAwareness <- rowMeans(select(df2, `BPQ 1`:`BPQ 26`), na.rm = TRUE)
df2$BPQ_AutonomicReactivity <- rowMeans(select(df2, `BPQ 27`:`BPQ 46`), na.rm = TRUE)


```

### Sample 3

- Campos (2022) - Study 1 
  - https://osf.io/j6ef3

```{r}
df3 <- haven::read_sav("../data/Campos2022/Dataset_Test.sav") |>
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(Sex == 1, "Male", ifelse(Sex == 0, "Female", "Other")))) |>
  rename(
    Heart = IAS1, Hungry = IAS2, Breathing = IAS3, Thirsty = IAS4,
    Urinate = IAS5, Defecate = IAS6, Taste = IAS7, Vomit = IAS8, Sneeze = IAS9,
    Cough = IAS10, Temp = IAS11, Sex_arousal = IAS12, Wind = IAS13, Burp = IAS14,
    Muscles = IAS15, Bruise = IAS16, Pain = IAS17, Blood_Sugar = IAS18,
    Affective_touch = IAS19, Tickle = IAS20, Itch = IAS21,
    TAS_EOT = TAS_ExternallyOrientedThinking, TAS_DIF = TAS_IdentifyingFeelings, TAS_DDF = TAS_DescribingFeelings
  )


df3$BPQ_BodyAwareness <- rowMeans(select(df3, BPQ1:BPQ26), na.rm = TRUE)
df3$BPQ_AutonomicReactivity <- rowMeans(select(df3, BPQ27:BPQ46), na.rm = TRUE)


```

### Sample 4

- Todd (2022) 
  - https://osf.io/ms354/
  - MAIA does not include items for not-worrying and not-distracting 
  - BPQ 26 - body awareness 

```{r}
df4 <- haven::read_sav("../data/Todd2022/CompleteData_new.sav") |>
  rename_with(\(x) str_remove(x, "IAS_"), .cols = starts_with("IAS_")) |>
  rename(
    Heart = IAS1, Hungry = IAS2, Breathing = IAS3, Thirsty = IAS4,
    Urinate = IAS5, Defecate = IAS6, Taste = IAS7, Vomit = IAS8, Sneeze = IAS9,
    Cough = IAS10, Temp = IAS11, Sex_arousal = IAS12, Wind = IAS13, Burp = IAS14,
    Muscles = IAS15, Bruise = IAS16, Pain = IAS17, Blood_Sugar = IAS18,
    Affective_touch = IAS19, Tickle = IAS20, Itch = IAS21
  )

df4$MAIA_AttentionReg <- rowMeans(select(df4, starts_with("MAIA_AR")), na.rm = TRUE)
df4$MAIA_BodyListening <- rowMeans(select(df4, starts_with("MAIA_BL")), na.rm = TRUE)
df4$MAIA_Trusting <- rowMeans(select(df4, starts_with("MAIA_TR")), na.rm = TRUE)
df4$MAIA_EmoAwareness <- rowMeans(select(df4, starts_with("MAIA_EA")), na.rm = TRUE)
df4$MAIA_SelfReg<- rowMeans(select(df4, starts_with("MAIA_SR")), na.rm = TRUE)
df4$MAIA_Noticing <- rowMeans(select(df4, starts_with("MAIA_NT")), na.rm = TRUE)

df4$BPQ_BodyAwareness <- rowMeans(select(df4, starts_with("BPQ_")), na.rm = TRUE)
```

    
### Sample 5

- Arslanova (2022)
  - https://osf.io/mp3cy/
  - note: Final.xlsx includes information about which participants passed the attention checks 

```{r}

df5_attention <- readxl::read_excel("../data/Arslanova2022/Participants2.xlsx", 
    sheet = "FINAL") |>
  filter(ActorHR == 1) |>
  select(Subj.ID, Gender, Age) |>
  mutate(Gender = as.numeric(Gender), Age = as.numeric(Age)) |>
  filter(!is.na(Age)) |> #error on the documentation of this participant - attention check failed but not noted
  mutate(Gender = case_when(
    Gender== 0 ~ "Male",
    Gender== 1 ~ "Female" # based on paper reporting 65 women
  ))


df5 <- readxl::read_excel("../data/Arslanova2022/Murphy_Iacc_scale.xlsx")  |>
  filter(str_detect(Question.Key, "IAC_")) |> 
  filter(str_detect(Question.Key, "-quantised")) |> 
  pivot_wider(names_from = Question.Key, values_from = Response) |>
  rename_with(\(x) str_remove(x, "IAC_"), .cols = starts_with("IAC_")) |> 
  rename_with(\(x) str_remove(x, "-quantised"), .cols = everything()) |> 
  rename(Sex_arousal = SexuallyAroused, Itch = Itchy, Sex_arousal = SexuallyAroused,
         Temp = HotCold, Tickle = Ticklish, Breathing= BreatheFast, 
         Affective_touch= PleasantAffectionate, Blood_Sugar= BloodSugar, 
         Muscles=TiredMuscles, Heart= FastHeart, Taste=Tastes) |> 
  rename(Subj.ID = "Participant.Public.ID") |>
  select(-starts_with("Participant")) 

df5 <- df5 |>
  filter(Subj.ID %in% df5_attention$Subj.ID) |>
  select(-Subj.ID) |>
  mutate(across(everything(), as.numeric))
```

### Sample 6

- Brand (2022) 
  - https://osf.io/xwz6g/

```{r}
df6 <- haven::read_sav("../data/Brand2022/LatentVariableApproach.sav") |> 
  select(-SERIAL) |> 
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(GENDER == 2, "Male", ifelse(GENDER == 1, "Female", "Other")))) |> 
  rename(
    Age=AGE, Heart = IAS_01, Hungry = IAS_02, Breathing = IAS_03, Thirsty = IAS_04,
    Urinate = IAS_05, Defecate = IAS_06, Taste = IAS_07, Vomit = IAS_08, Sneeze = IAS_09,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21,
    PHQ4_Depression= PHQ2_sum,
    PHQ4_Anxiety = GAD2_sum
  ) 
```

### Sample 7

- Brand (2023) 
  - https://osf.io/3f2h6/


```{r}
df7a <- haven::read_sav("../data/Brand2023/Data_Giessen.sav") |> 
  select(-COUNTRY_OTHER) |> 
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(SEX == 1, "Male", ifelse(SEX == 2, "Female", "Other")))) |> 
  rename(
    Age=AGE, Heart = IAS_01, Hungry = IAS_02, Breathing = IAS_03, Thirsty = IAS_04,
    Urinate = IAS_05, Defecate = IAS_06, Taste = IAS_07, Vomit = IAS_08, Sneeze = IAS_09,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21,
    MAIA_Noticing = MAIA_NOTICING, MAIA_NotDistracting = MAIA_NON_DISTRACTING,
    MAIA_NotWorrying = MAIA_NOT_WORRYING, MAIA_AttentionReg = mAIA_ATTENTION_REGULATION,
    MAIA_SelfReg = MAIA_SELF_REGULATION, MAIA_BodyListening = MAIA_BODY_LISTENING,
    MAIA_Trusting = MAIA_TRUSTING, MAIA_EmoAwareness = MAIA_EMOTIONAL_AWARENESS,
    STAIT_Sum = STAI_T_Sumscore
  ) |> 
  mutate(across(starts_with("MAIA_"), \(x) x - 1)) # Original scale 1-6

df7a$STAIT_Mean <- df7a$STAIT_Sum/20
df7a$Neuroticism <- rowMeans(select(df7a,NEOFFI_01:NEOFFI_12))


df7b <- haven::read_sav("../data/Brand2023/Data_Mainz.sav") |> 
  select(-COUNTRY_OTHER, -EDUCATION_OTHER, -Sample) |> 
  mutate_all(as.numeric) |> 
  mutate(Gender = as.character(ifelse(GENDER == 2, "Male", ifelse(GENDER == 1, "Female", "Other")))) |> 
  rename(
    Age=AGE, Heart = IAS_01, Hungry = IAS_02, Breathing = IAS_03, Thirsty = IAS_04,
    Urinate = IAS_05, Defecate = IAS_06, Taste = IAS_07, Vomit = IAS_08, Sneeze = IAS_09,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21,
    MAIA_Noticing = maiaNotice, MAIA_NotDistracting = maiaNonDistracting,
    MAIA_NotWorrying = maiaNotWorrying, MAIA_AttentionReg = maiaAttentionRegulation,
    MAIA_SelfReg = maiaSelfRegulation, MAIA_BodyListening = maiaBodyListening,
    MAIA_Trusting = maiaTrusting, MAIA_EmoAwareness = maiaEmotionalAwareness) |> 
  mutate(across(starts_with("MAIA_"), \(x) datawizard::rescale(x, to = c(0, 5), range = c(1, 5))),# Original scale 1-5
          across(PHQ15_01:PHQ15_15recode, \(x) datawizard::rescale(x, to = c(0,2), range =c(1,3))),
           across(PHQ9_01:PHQ9_09, \(x) datawizard::rescale(x, to = c(0,3), range =c(1,4))))

df7b$BPQ_BodyAwareness <- rowMeans(select(df7b, BPQ_01:BPQ_12), na.rm = TRUE)
df7b$PHQ15_Sum <-rowSums(select(df7b,PHQ15_01:PHQ15_15recode), na.rm = TRUE)
df7b$PHQ9_Sum <- rowMeans(select(df7b, PHQ9_01:PHQ9_09), na.rm = TRUE)
df7b$STAIT_Mean <- df7b$STAIT_Sum/20
  
  
df7c <- haven::read_sav("../data/Brand2023/Data_PotVie.sav") |> 
  select(-ID) |> 
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(GENDER == 2, "Male", ifelse(GENDER == 1, "Female", "Other")))) |> 
  rename(
    Age=AGE, Heart = IA02_01, Hungry = IA02_02, Breathing = IA02_03, Thirsty = IA02_04,
    Urinate = IA02_05, Defecate = IA02_06, Taste = IA02_07, Vomit = IA02_08, Sneeze = IA02_09,
    Cough = IA02_10, Temp = IA02_11, Sex_arousal = IA02_12, Wind = IA02_13, Burp = IA02_14,
    Muscles = IA02_15, Bruise = IA02_16, Pain = IA02_17, Blood_Sugar = IA02_18,
    Affective_touch = IA02_19, Tickle = IA02_20, Itch = IA02_21,
    MAIA_Noticing = MAIA_noticing, MAIA_NotDistracting = MAIA_notdis, 
    MAIA_NotWorrying = MAIA_notwor, MAIA_AttentionReg = MAIA_attreg,
    MAIA_SelfReg = MAIA_selfreg, MAIA_BodyListening = MAIA_bodlis,
    MAIA_Trusting = MAIA_trust, MAIA_EmoAwareness = MAIA_emoaw,
    ICQ = ICQ_sum,
    STAIT_Sum = STAIT_sum,
    TAS_DIF = TAS_ident, TAS_EOT = TAS_ext, TAS_DDF = TAS_des) |> 
  mutate(across(starts_with("MAIA_"), \(x) datawizard::rescale(x, to = c(0, 5), range = c(0, 6)))) # Original scale 0-6

df7c$BPQ_BodyAwareness <- df7c$BPQ_sum / 26
df7c$STAIT_Mean <- df7c$STAIT_Sum/20


```

### Sample 8

- Lin (2023)
  - https://osf.io/3eztd
  - Note: No tickle because same Chinese character
  - missing phq9_9 item

```{r}
df8a <- haven::read_sav("../data/Lin2023/Study 1 & 3.sav") |>
  select(-sex) |> 
  mutate_all(as.numeric) |>
  mutate(Gender = as.character(ifelse(sex_dummy == 1, "Male", ifelse(sex_dummy == 0, "Female", "Other")))) |>
  rename(
    Age = age,
    Heart = Heart, Hungry = HUNGR, Breathing = BREAT, Thirsty = Thirs,
    Urinate = URINA, Defecate = Defec, Taste = TASTE, Vomit = VOMIT, Sneeze = Sneez,
    Cough = COUGH, Temp = TEMPE, Sex_arousal = SEXAR, Wind = WIND, Burp = Burp,
    Muscles = MUSCL, Bruise = Bruis, Pain = PAIN, Blood_Sugar = BloSu,
    Affective_touch = Touch, Itch = ITCH
  ) 

df8a$BPQ_BodyAwareness <- rowMeans(select(df8a,BPQ1:BPQ12), na.rm = FALSE)


df8b <- haven::read_sav("../data/Lin2023/Study 2.sav") |>
  mutate(Gender = as.character(ifelse(Sex == "男", "Male", ifelse(Sex == "女", "Female", "Other")))) |>
  rename(
    Heart = Heart, Hungry = HUNGR, Breathing = BREAT, Thirsty = Thirs,
    Urinate = URINA, Defecate = Defec, Taste = TASTE, Vomit = VOMIT, Sneeze = Sneez,
    Cough = COUGH, Temp = TEMPE, Sex_arousal = SEXAR, Wind = WIND, Burp = Burp,
    Muscles = MUSCL, Bruise = Bruis, Pain = PAIN, Blood_Sugar = BloSu,
    Affective_touch = Touch, Itch = ITCH,
    PHQ15_Sum = PHQ15_sum, PHQ9_sum = PHQ9_sum)

df8b$PHQ9_Sum <- df8b$PHQ9_sum / 9
df8b$PHQ15_Sum <- df8b$PHQ15_Sum/ 15

```

### Sample 9

- VonMohr (2023) - Study 3 
  - https://osf.io/7p9u5/

```{r}
df9 <- read.csv("../data/VonMohr2023/DataSet_study3.csv")
df9 <- df9[complete.cases(select(df9, starts_with("IAS_"))), ]
df9 <- df9 |>
  mutate(Gender = as.character(ifelse(GENDER == "Man", "Male", ifelse(GENDER == "Woman", "Female", "Other")))) |>
  rename(
    Age=AGE, Heart = IAS_1, Hungry = IAS_2, Breathing = IAS_3, Thirsty = IAS_4,
    Urinate = IAS_5, Defecate = IAS_6, Taste = IAS_7, Vomit = IAS_8, Sneeze = IAS_9,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21
  ) |>
  mutate(
    Neuroticism = (BFI_1 + BFI_2 + BFI_3)/3,
    Agreeableness = (BFI_10R + BFI_11 + BFI_12)/3,
    Extraversion = (BFI_4 + BFI_5 + BFI_6),
    Conscientiousness = (BFI_13 + BFI_14 + BFI_15R)/3,
    Openness = (BFI_7 + BFI_8 + BFI_9)/3) |>
  mutate(across(starts_with("BFI_"), \(x) datawizard::rescale(x, to = c(0, 1))))
  
```

### Sample 10

- Makowski
  - Note: First sample has some missing items (No Taste, Cough, Blood_Sugar)
  - Note: Analog scales

```{r}
df10 <- read.csv("https://raw.githubusercontent.com/RealityBending/IllusionGameReliability/main/data/preprocessed_questionnaires.csv") |>
  rename(
    Gender = Sex, Heart = Item_IAS_Interoception_1, Hungry = Item_IAS_Interoception_2,
    Breathing = Item_IAS_Interoception_3, Thirsty = Item_IAS_Interoception_4,
    Temp = Item_IAS_Interoception_5, Sex_arousal = Item_IAS_Interoception_6,
    Urinate = Item_IAS_Elimination_1, Defecate = Item_IAS_Elimination_2,
    Vomit = Item_IAS_Elimination_3, Wind = Item_IAS_Expulsion_1,
    Burp = Item_IAS_Expulsion_2, Sneeze = Item_IAS_Expulsion_3,
    Muscles = Item_IAS_Nociception_1, Bruise = Item_IAS_Nociception_2,
    Pain = Item_IAS_Nociception_3, Affective_touch = Item_IAS_Skin_1,
    Tickle = Item_IAS_Skin_2, Itch = Item_IAS_Skin_3,
    MAIA_EmoAwareness = MAIA_EmotionalAwareness, MAIA_AttentionReg = MAIA_AttentionRegulation,
    MAIA_SelfReg = MAIA_SelfRegulation,
  ) |>
  filter(!is.na(Urinate)) |> 
  datawizard::rescale(select=ias_vars, to = c(1, 5), range = c(0, 1)) |> 
  mutate(across(starts_with("MAIA_"), \(x) datawizard::rescale(x, to = c(0, 5))),
         across(starts_with("PI_"), \(x) datawizard::rescale(x, to = c(0, 1))),
         across(starts_with("Item_PHQ4_Depression_"), \(x) datawizard::rescale(x, to = c(1,4))),
        across(starts_with("Item_PHQ4_Anxiety_"), \(x) datawizard::rescale(x, to = c(1,4))),
        across(starts_with("IPIP6_"), \(x) datawizard::rescale(x, to = c(0,1))),
        PHQ4_Depression = Item_PHQ4_Depression_3 + Item_PHQ4_Depression_4,
          PHQ4_Anxiety = Item_PHQ4_Anxiety_1 + Item_PHQ4_Anxiety_2) |>
  rename(
     Agreeableness = IPIP6_Agreeableness,
    Conscientiousness = IPIP6_Conscientiousness,
    Extraversion = IPIP6_Extraversion,
    HonestyHumility = IPIP6_HonestyHumility,
    Neuroticism = IPIP6_Neuroticism,
    Openness = IPIP6_Openness
  )
```

### Sample 11

```{r}
df11  <- read.csv("https://raw.githubusercontent.com/DominiqueMakowski/PHQ4R/main/study2/data/data.csv") |>
  rename(
    Heart = IAS_1, Hungry = IAS_2, Breathing = IAS_3, Thirsty = IAS_4,
    Urinate = IAS_5, Defecate = IAS_6, Taste = IAS_7, Vomit = IAS_8, Sneeze = IAS_9,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21,
    typeSample = Sample,
    BDI_Sum = BDI2_Total) |>
  mutate(
    MAIA2_NotDistracting_1_R = 1 - MAIA2_NotDistracting_1_R,
    MAIA2_NotDistracting_2_R = 1 - MAIA2_NotDistracting_2_R,
    MAIA2_NotDistracting_3_R = 1 - MAIA2_NotDistracting_3_R,
    MAIA2_NotDistracting_4_R = 1 - MAIA2_NotDistracting_4_R,
    MAIA2_NotDistracting_5_R = 1 - MAIA2_NotDistracting_5_R,
    MAIA2_NotDistracting_6_R = 1 - MAIA2_NotDistracting_6_R,
    MAIA2_NotWorrying_1_R = 1 - MAIA2_NotWorrying_1_R,
    MAIA2_NotWorrying_2_R = 1 - MAIA2_NotWorrying_2_R,
    MAIA2_NotWorrying_5_R = 1 - MAIA2_NotWorrying_5_R) |> 
  mutate(across(starts_with("MAIA2_"), \(x) datawizard::rescale(x, to = c(0, 5))),
         across(starts_with("PHQ4_Depression_"), \(x) datawizard::rescale(x, to = c(1,4))),
         across(starts_with("PHQ4_Anxiety_"), \(x) datawizard::rescale(x, to = c(1,4))),
         across(starts_with("STAI5_"), \(x) datawizard::rescale(x, to = c(1, 4)))) |>
   mutate(PHQ4_Depression = PHQ4_Depression_3 + PHQ4_Depression_4,
          PHQ4_Anxiety = PHQ4_Anxiety_1 + PHQ4_Anxiety_2,
          STAIT_Mean = (STAI5_1 + STAI5_2 + STAI5_3 + STAI5_4 + STAI5_4 + STAI5_5)/5) |>
  datawizard::rescale(select=ias_vars, to = c(1, 5), range = c(0, 1))

# Compute subscales

df11$MAIA_AttentionReg <- rowMeans(select(df11 , starts_with("MAIA2_Attention")))
df11$MAIA_EmoAwareness <- rowMeans(select(df11 , starts_with("MAIA2_Emotional")))
df11$MAIA_Noticing <- rowMeans(select(df11 , starts_with("MAIA2_Noticing")))
df11$MAIA_BodyListening <- rowMeans(select(df11 , starts_with("MAIA2_BodyListening")))
df11$MAIA_NotDistracting<- rowMeans(select(df11 , starts_with("MAIA2_NotDistracting")))
df11$MAIA_NotWorrying<- rowMeans(select(df11 , starts_with("MAIA2_NotWorrying")))
df11$MAIA_SelfReg<- rowMeans(select(df11 , starts_with("MAIA2_SelfRegulation")))
df11$MAIA_Trusting<- rowMeans(select(df11 , starts_with("MAIA2_Trusting")))

```

### Sample 12

```{r}
df12  <- read.csv("https://raw.githubusercontent.com/RealityBending/InteroceptionPrimals/refs/heads/main/data/data_participants.csv") |>
  select("Participant" = "participant_id", "Gender", "Age", "Ethnicity", starts_with(c("IAS","MAIA","PI"))) |>
   rename(
    Heart = IAS_1, Hungry = IAS_2, Breathing = IAS_3, Thirsty = IAS_4,
    Urinate = IAS_5, Defecate = IAS_6, Taste = IAS_7, Vomit = IAS_8, Sneeze = IAS_9,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21,
    MAIA_EmoAwareness = MAIA_EmotionalAwareness, 
    MAIA_AttentionReg = MAIA_AttentionRegulation,
    MAIA_SelfReg = MAIA_SelfRegulation
  ) |>
  filter(!is.na(Heart)) |>  # participant is outlier and had total IAS scores below 0.4 
  datawizard::rescale(select=ias_vars, to = c(1, 5), range = c(0, 1)) |> 
  mutate(across(starts_with("MAIA_"), \(x) datawizard::rescale(x, to = c(0, 5)))) 
```

### Sample 13

```{r}

df13  <- read.csv("https://raw.githubusercontent.com/RealityBending/InteroceptionScale/refs/heads/main/study2/data/rawdata_participants.csv") |>
  select("Participant", "Gender", "Age", "Ethnicity", starts_with(c("IAS","MAIA","PI", "PHQ4"))) |>
   rename(
    Heart = IAS_1, Hungry = IAS_2, Breathing = IAS_3, Thirsty = IAS_4,
    Urinate = IAS_5, Defecate = IAS_6, Taste = IAS_7, Vomit = IAS_8, Sneeze = IAS_9,
    Cough = IAS_10, Temp = IAS_11, Sex_arousal = IAS_12, Wind = IAS_13, Burp = IAS_14,
    Muscles = IAS_15, Bruise = IAS_16, Pain = IAS_17, Blood_Sugar = IAS_18,
    Affective_touch = IAS_19, Tickle = IAS_20, Itch = IAS_21
  ) |> 
  filter(Participant %in% read.csv("https://raw.githubusercontent.com/RealityBending/InteroceptionScale/refs/heads/main/study2/data/data_participants.csv")$Participant) |>
  mutate(
    MAIA_NotDistracting_1_R = 1 - MAIA_NotDistracting_1_R,
    MAIA_NotDistracting_2_R = 1 - MAIA_NotDistracting_2_R,
    MAIA_NotDistracting_3_R = 1 - MAIA_NotDistracting_3_R,
    MAIA_NotDistracting_4_R = 1 - MAIA_NotDistracting_4_R,
    MAIA_NotDistracting_5_R = 1 - MAIA_NotDistracting_5_R,
    MAIA_NotDistracting_6_R = 1 - MAIA_NotDistracting_6_R,
    MAIA_NotWorrying_1_R = 1 - MAIA_NotWorrying_1_R,
    MAIA_NotWorrying_2_R = 1 - MAIA_NotWorrying_2_R,
    MAIA_NotWorrying_5_R = 1 - MAIA_NotWorrying_5_R) |>
    mutate(across(starts_with("MAIA_"), \(x) datawizard::rescale(x, to = c(0, 5))),
           across(starts_with("PI18_"), \(x) datawizard::rescale(x, to = c(0,1)))) |>
  mutate(
    PI_Alive = (PI18_GA_2 + PI18_GA_14 + (1-PI18_A_12_R) + PI18_A_16 + PI18_A_4)/5)

  

# Compute subscales
df13$MAIA_AttentionReg <- rowMeans(select(df13 , starts_with("MAIA_Attention")))
df13$MAIA_EmoAwareness <- rowMeans(select(df13 , starts_with("MAIA_Emotional")))
df13$MAIA_Noticing <- rowMeans(select(df13 , starts_with("MAIA_Noticing")))
df13$MAIA_BodyListening <- rowMeans(select(df13 , starts_with("MAIA_BodyListening")))
df13$MAIA_NotDistracting<- rowMeans(select(df13 , starts_with("MAIA_NotDistracting")))
df13$MAIA_NotWorrying<- rowMeans(select(df13 , starts_with("MAIA_NotWorrying")))
df13$MAIA_SelfReg<- rowMeans(select(df13 , starts_with("MAIA_SelfRegulation")))
df13$MAIA_Trusting<- rowMeans(select(df13 , starts_with("MAIA_Trusting")))



df13$PHQ4_Depression <- (df13$PHQ4_Depression_4 + df13$PHQ4_Depression_3)/2
df13$PHQ4_Anxiety <- (df13$PHQ4_Anxiety_2 + df13$PHQ4_Anxiety_1)/2

```

```{r}
# pi_vars <- c("PI_Enticing", "PI_Alive", "PI_Safe", "PI_Good", "PI_Changing",
#              "PI_Hierarchical", "PI_Understandable", "PI_AboutMe", "PI_Abundant",
#              "PI_Acceptable", "PI_Beautiful", "PI_Cooperative", "PI_Funny",
#              "PI_Harmless", "PI_Improvable", "PI_Intentional", "PI_Interconnected",
#              "PI_Interesting", "PI_Just", "PI_Meaningful", "PI_NeedsMe",
#              "PI_Pleasurable", "PI_Progressing", "PI_Regenerative", "PI_Stable",
#              "PI_WorthExploring")
# 
# 
# correlation::correlation(
#   df12 [, "IAS_Total", drop = FALSE],
#   data2 = select(df12 , all_of(pi_vars)), p_adjust = "none"
# ) |>
#   # Formatting correlation results
#   mutate(val = paste0(insight::format_value(r), format_p(p, stars_only = TRUE))) |>
# 
#   # Releveling factors for visualization
#   mutate(Parameter2 = fct_relevel(Parameter2, rev(pi_vars)),
#          Parameter1 = fct_relevel(Parameter1, "IAS_Total")) |>
# 
#   # Plotting the correlation matrix
#   ggplot(aes(x = Parameter1, y = Parameter2)) +
#   geom_tile(aes(fill = r), color = "white") +
#   geom_text(aes(label = val), size = 3) +
#   labs(title = "Correlation Matrix") +
#   scale_fill_gradient2(low = "blue", high = "red", mid = "white", limit = c(-1, 1), midpoint = 0, guide = guide_colourbar(ticks = FALSE)) +
#   theme_minimal() +
#   theme(
#     legend.title = element_blank(),
#     axis.title.x = element_blank(),
#     axis.title.y = element_blank(),
#     axis.text.x = element_text(hjust = 1)
#   )
```


### Sample 14

- Poreiro et al., 
  - Study 1: https://osf.io/49wbv

```{r}
df14  <- haven::read_sav("../data/Giulia/Interoceptive Attention ESM.sav") |> 
  select(AGE, GENDER, contains("IAS_ACC"), -IAS_ACC_20, starts_with(c("MAIA", "TAS20", "DEP", "ANX")),  -ANX_21, -TAS20_21) |> #anx_21 , tas20_21 are attention checks
  mutate_all(as.numeric) |>
  rename(
    Age = AGE, Gender = GENDER,
    Heart = IAS_ACC_1, Hungry = IAS_ACC_2, Breathing = IAS_ACC_3, Thirsty = IAS_ACC_4,
    Urinate = IAS_ACC_5, Defecate = IAS_ACC_6, Taste = IAS_ACC_7, Vomit = IAS_ACC_8, Sneeze = IAS_ACC_9,
    Cough = IAS_ACC_10, Temp = IAS_ACC_11, Sex_arousal = IAS_ACC_12, Wind = IAS_ACC_13, Burp = IAS_ACC_14,
    Muscles = IAS_ACC_15, Bruise = IAS_ACC_16, Pain = IAS_ACC_17, Blood_Sugar = IAS_ACC_18,
    Affective_touch = IAS_ACC_19, Tickle =IAS_ACC_21, Itch = IAS_ACC_22,
    MAIA_EmoAwareness =MAIA_Emotional, MAIA_SelfReg = MAIA_SelfRegulation, MAIA_AttentionReg = MAIA_Attention,
    STAIT_Sum = ANX
  ) |>
   mutate(Gender = case_when(
    Gender == 1 ~ "Male",
    Gender == 2 ~ "Female",
    Gender %in% c(3, 5) ~ "Other",
    Gender == 4 ~ "NA"),
    TAS_DIF = TAS20_1 + TAS20_3 + TAS20_6 + TAS20_7 + TAS20_9 + TAS20_13 + TAS20_14,
    TAS_DDF = TAS20_2 + (6-TAS20_4) + TAS20_11 + TAS20_12 + TAS20_17,
    TAS_EOT = (6-TAS20_5) + TAS20_8 + (6-TAS20_10) + TAS20_15 + TAS20_16 + (6-TAS20_18) + (6-TAS20_19) + TAS20_20) 

df14$STAIT_Mean <- df14$STAIT_Sum/20

```


### Sample 15
- Poreiro: unpublished

```{r}
df15   <- haven::read_sav("../data/Giulia/Sleep and Exteroceptive Interoceptive Sensitivity.sav") |> # 165 participants
  filter(Total_Attention_Fail == 0) |> # 32 participants removed based on failing one or more checks
  select(AGE, GENDER, contains("IAS_ACC"), ) |> 
  mutate_all(as.numeric) |> 
  rename( Age = AGE, Gender = GENDER, 
          Heart = IAS_ACC_1, Hungry = IAS_ACC_2, Breathing = IAS_ACC_3, Thirsty = IAS_ACC_4, Urinate = IAS_ACC_5, Defecate = IAS_ACC_6, Taste = IAS_ACC_7,
          Vomit = IAS_ACC_8, Sneeze = IAS_ACC_9, Cough = IAS_ACC_10, Temp = IAS_ACC_11, Sex_arousal = IAS_ACC_12, Wind = IAS_ACC_13, Burp = IAS_ACC_14,
          Muscles = IAS_ACC_15, Bruise = IAS_ACC_16, Pain = IAS_ACC_17, Blood_Sugar = IAS_ACC_18, Affective_touch = IAS_ACC_19, Tickle =IAS_ACC_20, 
          Itch = IAS_ACC_21 )  |> 
  mutate(Gender = case_when(
    Gender == 1 ~ "Male", 
    Gender == 2 ~"Female", 
    Gender %in% c(3, 5) ~ "Other", 
    Gender == 4 ~ "NA", )) |>
  na.omit()
```

### Sample 16

- Raquel Arjona and Robyn Scharte data 

```{r}

df16 <- read.csv("../data/Scharte2025/data_IAS_rs.csv") |>
  rename(Age= age, Gender = gender_identity, Education = education,
         Heart = ias1, Hungry = ias2, Breathing = ias3, Thirsty = ias4, Urinate = ias5, 
         Defecate=ias6, Taste = ias7,Vomit = ias8, Sneeze = ias9, Cough = ias10, 
         Temp = ias11, Sex_arousal = ias12, Wind = ias13, Burp = ias14,Muscles = ias15, 
         Bruise = ias16, Pain = ias17, Blood_Sugar = ias18, Affective_touch = ias19, 
         Tickle =ias20, Itch = ias21,
         ) |>
  mutate(Gender = case_when(
    Gender == 1 ~ "Male",
    Gender == 2 ~ "Female",
    Gender %in% c(3, 4, 5) ~ "Other",
    Gender == 6 ~ "NA"),
    Education = case_when(
      Education == 6 ~ "Bachelor",
      Education == 7 ~ "Master",
      Education == 8 ~ "Doctorate",
      Education == 2 | Education == 3 ~ "High School", # GCSE + A-levels (16-18 years old)
      Education == 4 | Education == 5 ~ "Other",       # NVQ and foundation year
      Education == 1 ~ "No education"),
    MAIA_Noticing = (maia1 + maia2 + maia3 + maia4)/4,
    MAIA_NotDistracting = (maia5_rev + maia6_rev + maia7_rev +maia8_rev + maia9_rev + maia10_rev)/6, 
    MAIA_NotWorrying = (maia11_rev +maia12_rev  + maia13)/3,
    MAIA_AttentionReg = (maia16 + maia17 + maia18 + maia19 + maia20 + maia21 + maia22)/7,
    MAIA_EmoAwareness = (maia23 + maia24 + maia25 + maia26 +maia27)/5,
    MAIA_SelfReg = (maia28 + maia29 + maia30 + maia31)/4,
    MAIA_BodyListening = (maia32 + maia33 +maia34)/3,
    MAIA_Trusting = (maia35 + maia36 + maia37)/3 ,
    GAD7_Sum = rowSums(across(starts_with("gad1_")), na.rm = TRUE),
    PHQ9_Sum = rowSums(across(starts_with("phq1_")), na.rm = TRUE)) |>
  filter (!Age == 2004.00, !Age == 1999.00, # misreported age
          att == 2) # only those that select 'no' the attention check

```

:::


## Participants

```{r}
# Save all
data <- list(df1a=df1a, df1b=df1b, df2=df2, df3=df3, df4=df4, df5=df5, df6=df6, df7a=df7a, df7b=df7b, df7c=df7c, df8a=df8a, df8b=df8b, df9=df9, df10=df10, df11 =df11 , df12 =df12 , df13  = df13 , df14 =df14 , df15  =df15, df16 = df16)
save(data, file = "../data/data.RData")
```


- **Sample 1a**: Data from [Murphy's (2020)](https://osf.io/3m5nh/?view_only=a68051df4abe4ecb992f22dc8c17f769) study 1, downloaded from OSF, included `r report::report_participants(df1a, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 1b**: Data from [Murphy's (2020)](https://osf.io/3m5nh/?view_only=a68051df4abe4ecb992f22dc8c17f769) study 6, downloaded from OSF, included `r report::report_participants(df1b, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 2**: Data from [Gaggero's(2020)](https://osf.io/5x9sg/) study, downloaded from OSF, included `r report::report_participants(df2[c("Age", "Gender")], age = "Age", sex = NA, gender = "Gender")`.
- **Sample 3**: Data from [Campos's(2022)](https://osf.io/j6ef3) study, downloaded from OSF, included `r report::report_participants(df3, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 4**: Data from [Todd's(2022)]( https://osf.io/ms354/) study, downloaded from OSF, included `r report::report_participants(df4, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 5**: Data from [Arslanova (2022)](https://osf.io/mp3cy/) study, downloaded from OSF, included `r report::report_participants(df5_attention, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 6**: Data from [Brand's(2022)](https://osf.io/xwz6g/) study, downloaded from OSF, included `r report::report_participants(df6, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 7a**: Data from [Brand's(2023)](https://osf.io/3f2h6/) study, downloaded from OSF, included `r report::report_participants(df7a, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 7b**: Data from [Brand's(2023)](https://osf.io/3f2h6/) study, downloaded from OSF, included `r report::report_participants(df7b, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 7c**: Data from [Brand's(2023)](https://osf.io/3f2h6/) study, downloaded from OSF, included `r report::report_participants(df7c, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 8a**: Data from [Lin's(2023)](https://osf.io/3eztd) study, downloaded from OSF, included `r report::report_participants(df8a, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 8b**: Data from [Lin's(2023)](https://osf.io/3eztd) study, downloaded from OSF, included `r report::report_participants(df8b, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 9**: Data from [VonMohr's(2023)](https://osf.io/7p9u5/) study 3, downloaded from OSF, included `r report::report_participants(df9, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 10**: Data from [Makowski's(2023)] study , downloaded from OSF, included `r report::report_participants(df10, age = "Age", sex = NA, gender = "Gender")`.
- **Sample 11**: Data from [Makowski's(2023)] study , downloaded from OSF, included `r report::report_participants(df11 , age = "Age", sex = NA, gender = "Gender")`.
- **Sample 12**: Data from [Makowski's(2023)] study , downloaded from OSF, included `r report::report_participants(df12 , age = "Age", sex = NA, gender = "Gender")`.
- **Sample 13**: Data from [Makowski's(2023)] study , downloaded from OSF, included `r report::report_participants(df13 , age = "Age", sex = NA, gender = "Gender")`.
- **Sample 14**: Data from [Poreiro's(2024)](https://osf.io/49wbv) study , included `r report::report_participants(df14 , age = "Age", sex = NA, gender = "Gender")`
- **Sample 15 **: Data from [Poreiro's] study , included `r report::report_participants(df15 , age = "Age", sex = NA, gender = "Gender")`
- **Sample 16 **: Data from [Arjona's] study , included `r report::report_participants(df16 , age = "Age", gender = "Gender")`


Total N = `r nrow(df1a) + nrow(df1b) + nrow(df2) + nrow(df3) + nrow(df4) + nrow(df5) + nrow(df6) + nrow(df7a) + nrow(df7b) + nrow(df7c) + nrow(df8a) + nrow(df8b) + nrow(df9) + nrow(df10) + nrow(df11) + nrow(df12) + nrow(df13) + nrow(df14) + nrow(df15) + nrow(df16)`.

```{r}

desc <- function(df){
  summary <- df |> summarise(
      n = n(),
      mean = mean(Age, na.rm = TRUE),
      sd = sd(Age, na.rm = TRUE),
      min = min(Age, na.rm = TRUE),
      max = max(Age, na.rm = TRUE),
      female = sum(Gender == "Female", na.rm = TRUE)
    )
    return(summary)
}

desc_df1a <- desc(df1a)
desc_df1b <- desc(df1b)
desc_df2 <- desc(df2)
desc_df3 <- desc(df3)
#desc_df4 <- desc(df4) # no demographic data available
desc_df5 <- desc(df5_attention)
desc_df6 <- desc(df6)
desc_df7a <- desc(df7a)
desc_df7b <- desc(df7b)
desc_df7c <- desc(df7c)
desc_df8a <- desc(df8a)
desc_df8b <- desc(df8b)
desc_df9 <- desc(df9)
desc_df10 <- desc(df10)
desc_df11 <- desc(df11)
desc_df12 <- desc(df12)
desc_df13 <- desc(df13)
desc_df14 <- desc(df14)
desc_df15 <- desc(df15)
desc_df16 <- desc(df16)

desc_total <- rbind(desc_df1a, desc_df1b, desc_df2, desc_df3, desc_df5, desc_df6, desc_df7a, desc_df7b, desc_df7c, desc_df8a, desc_df8b, desc_df9, desc_df10, desc_df11 , desc_df12 , desc_df13 , desc_df14 , desc_df15, desc_df16)

## calculate weighted mean

total_mean <- sum(desc_total$mean * desc_total$n) / sum(desc_total$n)
total_sd <- sum(desc_total$sd * desc_total$n) / sum(desc_total$n)
perce_female <- sum(desc_total$female)/sum(desc_total$n) * 100

``` 

```{r}
#| output: false
#| warning: false

library(gt)

# APA style ####
gt_apastyle <- function(gt_table, font.size=12) {
  gt_table  |> 
    gt::opt_table_lines(extent = "none") %>%
    gt::tab_options(
      heading.border.bottom.width = 2,
      heading.border.bottom.color = "black",
      heading.border.bottom.style = "solid",
      table.border.top.color = "black",
      table.border.top.style = "solid",
      table.border.top.width = 2,  
      table_body.hlines.color = "white",
      table_body.border.top.color = "black",
      table_body.border.top.style = "solid",
      table_body.border.top.width = 2,
      heading.title.font.size = font.size,
      table.font.size = font.size,
      heading.subtitle.font.size = font.size,
      table_body.border.bottom.color = "black",
      table_body.border.bottom.width = 2,
      table_body.border.bottom.style = "solid",
      column_labels.border.bottom.color = "black",
      column_labels.border.bottom.style = "solid",
      column_labels.border.bottom.width = 1,
      latex.use_longtable = FALSE
    ) |> 
      gt::opt_table_font(font = "times")
}

make_age <- function(age) {
  age <- as.numeric(age) 
  
  mean(age, na.rm = TRUE) |> 
    insight::format_value(digits=1) |> 
    paste0(" ± ", 
           insight::format_value(sd(age, na.rm = TRUE), digits=1)) 
} 

# Create the dataframe
table <- data.frame(
  Sample = c('', 'Sample 1a', 'Sample 1b', 'Sample 2', 'Sample 3', 'Sample 4', 'Sample 5', 'Sample 6', '', 'Sample 7a', 'Sample 7b', 'Sample 7c', '', 'Sample 8a', 'Sample 8b', 'Sample 9', 'Sample 10', 'Sample 11', 'Sample 12', 'Sample 13', 'Sample 14', 'Sample 15', 'Sample 16', 'Sample 17'),   
  Reference = c('Murphy et al., (2020)', '', '', 'Gaggero et al., (2021)', 'Campos et al., (2022)', 'Todd et al., (2022)', 'Arslanova et al., (2022)', 'Brand et al., (2022)', 'Brand et al., (2023)', '', '', '', 'Lin et al., (2023)', '', '', 'VonMohr et al., (2023)', 'Makowski et al., (2023a)', 'Makowski et al., (2023b)', 'Makowski et al., (2023c)', 'Makowski et al., (2024)', 'Poerio et al., (2024)', 'Poerio et al., unpublished', 'Arjona et al., unpublished', 'Total'),
  Language = c('', 'English', 'English' , 'English and Italian', 'Portuguese', 'English', 'English', 'German', '', 'German', 'German', 'German', '', 'Chinese', 'Chinese', 'English', 'English', 'English', 'English', 'English', 'English', 'English','English', ''),
  N = c('', nrow(df1a), nrow(df1b), nrow(df2), nrow(df3), nrow(df4), nrow(df5_attention), nrow(df6),'', nrow(df7a), nrow(df7b), 802,'', nrow(df8a), nrow(df8b), nrow(df9), nrow(df10), nrow(df11), nrow(df12), nrow(df13), nrow(df14), nrow(df15), nrow(df16), 33272),
  'Difference' = c('','', '', '', '', '', '', '', '', '', '', '', '', 'Collapsed "Itch" and "Tickling"', 'Collapsed "Itch" and "Tickling"', '', 'Analog scales. No Temperature, Blood sugar and Cough items', 'Analog scales', 'Analog scales', '', '', '', '', ''),
  Age = c('', make_age(df1a$Age), make_age(df1b$Age), make_age(df2$Age), make_age(df3$Age), "48.6.6 ± 14.1*", make_age(df5_attention$Age), make_age(df6$Age),'', make_age(df7a$Age), make_age(df7b$Age), make_age(df7c$Age),'', make_age(df8a$Age), make_age(df8b$Age), make_age(df9$Age), make_age(df10$Age), make_age(df11$Age), make_age(df12$Age), make_age(df13$Age), make_age(df14$Age), make_age(df15$Age), make_age(df16$Age), '48.09 ± 13.1'),
  Range = c('', '18-69', '18-91', '18-58', '18-72', '18-92*', '18-73', '18-78', '', '18-79', '16-81', '18-72','', '16-60', '20-60', '18-93', '18-73', '17-76','18-50', '17, 87', '18-57', '18-60', '18-79', '17-93'),
  Female_Percentage = c('', '69.4%', '70.1%', '60.3%', '59.6%', '50%*', '46.8%', '78.7%', '', '79.5%', '77.7%', '68.9%', '', '57.0%', '56.2%', '73.2%', '50.3%', '53.0%', '76%', '57.3%', '74.8%', '75.9%', '67.7%', '71.3%'),
  Availability= c('osf.io/3m5nh', '', '', 'osf.io/5x9sg', 'osf.io/j6ef3', 'osf.io/ms354', 'osf.io/mp3cy', 'osf.io/xwz6g', 'osf.io/3f2h6', '', '', '','osf.io/3eztd','', '', 'osf.io/7p9u5', 'github.com/RealityBending/IllusionGameReliability', 'github.com/DominiqueMakowski/PHQ4R', 'github.com/RealityBending/InteroceptionPrimals', 
'github.com/RealityBending/InteroceptionScale',
'osf.io/49wbv', '','', '')
) 

table_apa <- table |> 
  gt() |>
  cols_align(align = c("right"), columns = "Age") |> 
  cols_label(Age = "Age (Mean  ± SD)", Female_Percentage = "Female %") |> 
  tab_footnote("Note.*Information taken from the sample description of relevant paper rather than recomputed.")
  
gt_apastyle(table_apa, font.size=12)
# gtsave(gt_apastyle(table_apa, font.size=9), "figures/table1.tex")
saveRDS(table, "figures/table1.rds")

# gtsave(table_apa, "figures/table1.png")
```


## Item Selection

### Distribution

The items with the differing distribution pattern (with a lower mode around 2/5) are "Affective Touch", "Blood Sugar" and "Bruise".

```{r}
dens1a <- estimate_density(select(df1a, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 1a")
dens1b <- estimate_density(select(df1b, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 1b")
dens2 <- estimate_density(select(df2, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 2")
dens3 <- estimate_density(select(df3, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 3")
dens4 <- estimate_density(select(df4, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 4")
dens5 <- estimate_density(select(df5, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 5")
dens6 <- estimate_density(select(df6, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 6")
dens7a <- estimate_density(select(df7a, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 7a")
dens7b <- estimate_density(select(df7b, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 7b")
dens7c <- estimate_density(select(df7c, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 7c")
dens8a <- estimate_density(select(df8a, all_of(setdiff(ias_vars, "Tickle"))), method = "kernSmooth") |>
  mutate(Sample = "Sample 8a")
dens8b <- estimate_density(select(df8b, all_of(setdiff(ias_vars, "Tickle"))), method = "kernSmooth") |>
  mutate(Sample = "Sample 8b")
dens9 <- estimate_density(select(df9, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 9")
dens10 <- estimate_density(select(df10, all_of(setdiff(ias_vars, c("Taste", "Cough", "Blood_Sugar")))), method = "kernSmooth") |>
  mutate(Sample = "Sample 10")
dens11<- estimate_density(select(df11, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 11")
dens12  <- estimate_density(select(df12, all_of(ias_vars)), method = "kernSmooth") |>
    mutate(Sample = "Sample 12")
dens13  <- estimate_density(select(df13, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 13")
dens14  <- estimate_density(select(df14, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 14")
dens15  <- estimate_density(select(df15, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 15")
dens16  <- estimate_density(select(df16, all_of(ias_vars)), method = "kernSmooth") |>
  mutate(Sample = "Sample 16")


p1_data <- rbind(dens1a, dens1b, dens2, dens3, dens4, dens5, dens6, dens7a, dens7b, dens7c, dens8a, dens8b, dens9, dens10, dens11 , dens12, dens13, dens14, dens15, dens16) 

linetype <- setNames(rep("solid", length(ias_vars)), ias_vars)
linetype["Affective touch"] <- "dotted"
linetype["Blood sugar"] <- "dashed"
linetype["Sex arousal"] <- "solid"
linetype["Bruise"] <- "dashed"

# proportion of non-1 and non-5 values 
p1_data |>
  filter(x > 1 & x < 5) |>  # Keep only x values strictly between 1 and 5
  summarise(proportion = sum(y) / sum(p1_data$y))  # Normalize by total density

p1 <- p1_data |>
  mutate(Sample = fct_relevel(Sample, "Sample 1a", "Sample 1b", "Sample 2", "Sample 3", "Sample 4", "Sample 5", "Sample 6", "Sample 7a", "Sample 7b", "Sample 7c", "Sample 8a", "Sample 8b", "Sample 9", "Sample 10", "Sample 11", "Sample 12", "Sample 13", "Sample 14", "Sample 15"),
         Parameter = ifelse(Parameter == "Affective_touch", "Affective touch", Parameter),
         Parameter = ifelse(Parameter == "Blood_Sugar", "Blood sugar", Parameter),
         Parameter = ifelse(Parameter == "Sex_arousal", "Sex arousal", Parameter)) |>
  # mutate(Dashed = ifelse(Parameter %in% c("Affective_touch", "Blood_Sugar", "Bruise"), TRUE, FALSE)) |> 
  ggplot(aes(x = x, y = y, color = Parameter)) +
  geom_line(aes(linetype = Parameter), linewidth = 0.5) +
  scale_color_material_d() +
  scale_linetype_manual(values = linetype)  +
  labs(x = "Response", y = "Distribution", color = "Item", linetype = "Item", title = "Item Distribution") +
  guides(color = guide_legend(ncol = 1)) +
  facet_wrap(~Sample, scales = "free_y", nrow = 4) +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        axis.title.y = element_blank(),
        plot.title = element_text(face="bold"))

p1
```


```{r}
#  ONLY IAS DATA
data1a <- select(df1a, all_of(dens1a$Parameter))
data1b <- select(df1b, all_of(dens1b$Parameter))
data2 <- select(df2, all_of(dens2$Parameter))
data3 <- select(df3, all_of(dens3$Parameter))
data4 <- select(df4, all_of(dens4$Parameter))
data5 <- select(df5, all_of(dens5$Parameter))
data6 <- select(df6, all_of(dens6$Parameter))
data7a <- select(df7a, all_of(dens7a$Parameter))
data7b <- select(df7b, all_of(dens7b$Parameter))
data7c <- select(df7c, all_of(dens7c$Parameter))
data8a <- select(df8a, all_of(dens8a$Parameter))
data8b <- select(df8b, all_of(dens8b$Parameter))
data9 <- select(df9, all_of(dens9$Parameter))
data10 <- select(df10, all_of(dens10$Parameter))
data11  <- select(df11, all_of(dens11$Parameter))
data12  <- select(df12, all_of(dens12$Parameter))
data13  <- select(df13, all_of(dens13$Parameter))
data14  <- select(df14, all_of(dens14$Parameter))
data15   <- select(df15, all_of(dens15$Parameter))
data16   <- select(df16, all_of(dens16$Parameter))


data_all <- rbind(
  data1a, data1b, data2, data3, data4, data5, data6, data7a, data7b, data7c,
  mutate(data8a, Tickle = NA), 
  mutate(data8b, Tickle = NA), data9,
  mutate(data10, Taste = NA, Cough = NA, Blood_Sugar = NA),  
  data11,  data12 , data13, data14, data15, data16  
) 
```

### Correlations

An overall positive intercorrelation pattern, with no clear structure emerging.

::: {.panel-tabset}

#### All data

```{r}
make_correlation <- function(df) {
  correlation::correlation(df, redundant = TRUE) |>
    correlation::cor_sort() |>
    # correlation::cor_lower() |>
    mutate(val = paste0(insight::format_value(r), format_p(p, stars_only = TRUE)),
           r = ifelse(Parameter1 == Parameter2, NA, r),
           lbl = ifelse(Parameter1 == Parameter2, "", format_value(r, zap_small = TRUE, lead_zero = FALSE)),
           lbl = ifelse(p > .05, "", lbl),
           Param1 = fct_relevel(str_replace(Parameter1, "_", " "), str_replace(levels(Parameter1), "_", " ")),
           Param2 = fct_relevel(str_replace(Parameter2, "_", " "), str_replace(levels(Parameter2), "_", " "))) |>
    # mutate(Parameter2 = fct_rev(Parameter2)) |>
    ggplot(aes(x = Param1, y = Param2)) +
    geom_tile(aes(fill = r), color = "white") +
    geom_text(aes(label = lbl), size = 3) +
    labs(title = "Correlation Matrix", subtitle = paste0("N = ", nrow(df))) +
    scale_fill_gradientn(
      colors = c("white", "#FFF9C4", "#FFF59D", "#FFEB3B", "#FFCA28", "#FF9800", "#FF5722",
        "#F44336", "#E91E63", "#9C27B0", "#673AB7", "#512DA8", "#311B92"),
      na.value = "#263238",
      limits = c(0.05, 0.75),
      guide = guide_colorbar(ticks.colour = NA)
    ) +
    # scale_fill_metro_c(limit = c(0, 0.75), guide = guide_colourbar(ticks = FALSE)) +
    theme_minimal() +
    theme(
      legend.title = element_blank(),
      legend.position = "none",
      axis.title.x = element_blank(),
      axis.title.y = element_blank(),
      axis.text.x = element_text(angle = 45, hjust = 1),
      plot.title = element_text(face = "bold")
    )
}

p2 <- make_correlation(data_all)
p2

fig1 <- p1 / p2
ggsave("figures/Figure1.png", fig1, width=10, height=12, dpi=300, bg="white")
```


#### Sample 1a

```{r}
make_correlation(data1a)
```

#### Sample 1b

```{r}
make_correlation(data1b)
```


#### Sample 2

```{r}
make_correlation(data2)
```


#### Sample 3

```{r}
make_correlation(data3)
```

#### Sample 4

```{r}
make_correlation(data6)
```

#### Sample 5

```{r}
make_correlation(data5)
```

#### Sample 6

```{r}
make_correlation(data6)
```

#### Sample 7a

```{r}
make_correlation(data7a)
```

#### Sample 7b

```{r}
make_correlation(data7b)
```

#### Sample 7c

```{r}
make_correlation(data7c)
```


#### Sample 8a

```{r}
make_correlation(data8a)
```

#### Sample 8b

```{r}
make_correlation(data8b)
```

#### Sample 9

```{r}
make_correlation(data9)
```

#### Sample 10

```{r}
make_correlation(data10)
```

#### Sample 11 

```{r}
make_correlation(data11)
```

#### Sample 12 

```{r}
make_correlation(data12)
```

#### Sample 13

```{r}
make_correlation(data13)
```

#### Sample 14 

```{r}
make_correlation(data14)
```

#### Sample 15  

```{r}
make_correlation(data15)
```

#### Sample 16  

```{r}
make_correlation(data16)
```

:::


### Unique Variable Analysis (UVA)

Unique Variable Analysis (Christensen, Garrido, & Golino, 2023) uses the weighted topological overlap measure (Nowick et al., 2009) on an estimated network. Values greater than 0.25 are determined to have considerable local dependence (i.e., redundancy) that should be handled (variables with the highest maximum weighted topological overlap to all other variables (other than the one it is redundant with) should be removed).

::: {.panel-tabset}

#### All data

```{r}
uva0 <- EGAnet::UVA(data = data_all, cut.off = 0.3)
uva0
uva0$keep_remove
```


#### Sample 1a

```{r}
uva1a <- EGAnet::UVA(data = data1a, cut.off = 0.3)
uva1a
uva1a$keep_remove
```

#### Sample 1b

```{r}
uva1b <- EGAnet::UVA(data = data1b, cut.off = 0.3)
uva1b
uva1b$keep_remove
```

#### Sample 2

```{r}
uva2 <- EGAnet::UVA(data = data2, cut.off = 0.3)
uva2
uva2$keep_remove
```


#### Sample 3

```{r}
uva3 <- EGAnet::UVA(data = data3, cut.off = 0.3)
uva3
uva3$keep_remove
```

#### Sample 4

```{r}
uva4 <- EGAnet::UVA(data = data6, cut.off = 0.3)
uva4
uva4$keep_remove
```

#### Sample 5 

```{r}
uva5 <- EGAnet::UVA(data = data5, cut.off = 0.3)
uva5
uva5$keep_remove
```

#### Sample 6

```{r}
uva6 <- EGAnet::UVA(data = data6, cut.off = 0.3)
uva6
uva6$keep_remove
```

#### Sample 7a

```{r}
uva7a <- EGAnet::UVA(data = data7a, cut.off = 0.3)
uva7a
uva7a$keep_remove
```

#### Sample 7b

```{r}
uva7b <- EGAnet::UVA(data = data7b, cut.off = 0.3)
uva7b
uva7b$keep_remove
```

#### Sample 7c

```{r}
uva7c <- EGAnet::UVA(data = data7c, cut.off = 0.3)
uva7c
uva7c$keep_remove
```

#### Sample 8a

```{r}
uva8a <- EGAnet::UVA(data = data8a, cut.off = 0.3)
uva8a
uva8a$keep_remove
```

#### Sample 8b

```{r}
uva8b <- EGAnet::UVA(data = data8b, cut.off = 0.3)
uva8b
uva8b$keep_remove
```

#### Sample 9

```{r}
uva9 <- EGAnet::UVA(data = data9, cut.off = 0.3)
uva9
uva9$keep_remove
```

#### Sample 10

```{r}
uva10 <- EGAnet::UVA(data = data10, cut.off = 0.3)
uva10
uva10$keep_remove
```

#### Sample 11 

```{r}
uva11  <- EGAnet::UVA(data = data11 , cut.off = 0.3)
uva11 
uva11$keep_remove
```

#### Sample 12 

```{r}
uva12  <- EGAnet::UVA(data = data12, cut.off = 0.3)
uva12 
uva12$keep_remove
```

#### Sample 13 

```{r}
uva13 <- EGAnet::UVA(data = data13, cut.off = 0.3)
uva13 
uva13$keep_remove
```
#### Sample 14 

```{r}
uva14  <- EGAnet::UVA(data = data14, cut.off = 0.3)
uva14 
uva14$keep_remove
```

#### Sample 15  

```{r}
uva15   <- EGAnet::UVA(data = data15, cut.off = 0.3)
uva15  
uva15$keep_remove
```

#### Sample 16  

```{r}
uva16  <- EGAnet::UVA(data = data16, cut.off = 0.3)
uva16  
uva16$keep_remove
```

#### Summary


```{r}
rez_uva <- c(uva1a$keep_remove$remove,
  uva1b$keep_remove$remove,
  uva2$keep_remove$remove,
  uva3$keep_remove$remove,
  uva4$keep_remove$remove,
  uva5$keep_remove$remove,
  uva6$keep_remove$remove,
  uva7a$keep_remove$remove,
  uva7b$keep_remove$remove,
  uva7c$keep_remove$remove,
  uva8a$keep_remove$remove,
  uva8b$keep_remove$remove,
  uva9$keep_remove$remove,
  uva10$keep_remove$remove,
  uva11$keep_remove$remove,
  uva12$keep_remove$remove,
  uva13$keep_remove$remove,
  uva14$keep_remove$remove,
  uva15$keep_remove$remove,
  uva16$keep_remove$remove)

sort(table(rez_uva), decreasing = TRUE) / length(rez_uva) 
```

:::

### Structure Refinement

Discarded the following items:
- Tickle: not present in the same dataset and consistently flagged as redundant in UVA analysis.

```{r}
data_all <- select(data_all, -Tickle)
data1a <- select(data1a, -Tickle)
data1b <- select(data1b, -Tickle)
data2 <- select(data2, -Tickle)
data3 <- select(data3, -Tickle)
data6 <- select(data6, -Tickle)
data5 <- select(data5, -Tickle)
# data6 <- select(data6, -Tickle)
data7a <- select(data7a, -Tickle)
data7b <- select(data7b, -Tickle)
data7c <- select(data7c, -Tickle)
# data8a <- select(data8a, -Tickle)
# data8b <- select(data8b, -Tickle)
data9 <- select(data9, -Tickle)
data10 <- select(data10, -Tickle)
data11 <- select(data11 , -Tickle)
data12 <- select(data12 , -Tickle)
data13 <- select(data13 , -Tickle)
data14 <- select(data14 , -Tickle)
data15 <- select(data15 , -Tickle)
data16 <- select(data16 , -Tickle)
```

#### Initial


```{r}
colors <- c("Heart" = "#F44336", "Breathing" = "#FF5722",
            "Hungry" = "#FF9800", "Thirsty" = "#FFC107",
            "Burp" = "#4CAF50", "Wind" = "#009688",
            "Urinate" = "#63824C", "Defecate" = "#795548",
            "Cough" = "#8BC34A", "Sneeze" = "#CDDC39", 
            "Bruise" = "#673AB7", "Blood Sugar" = "#3F51B5",
            "Muscles" = "#2196F3", "Pain" = "#00BCD4",
            "Sex arousal" = "#FF4081", "Temp" = "#9C27B0",
            "Vomit" = "#76FF03", "Taste" = "#00E676",
            "Affective touch" = "#FF1744", "Itch" = "#D500F9")
```


::: {.panel-tabset}

##### HCA

```{r}
#| fig.width: 8
#| fig.height: 12

make_hclust <- function(data) {
  rez_pvclust <- pvclust::pvclust(data,
                 method.hclust = "complete",
                 method.dist = "correlation",
                 nboot = 1000, quiet=TRUE, parallel=TRUE)
  
  
  dendrogram <- as.dist(1 - cor(data, use = "pairwise.complete.obs")) |> 
  hclust(method = "complete") |> 
  tidygraph::as_tbl_graph() 


  # Process Nodes
  nodes <- as.list(dendrogram)$nodes |> 
    mutate(
      Size = ifelse(label != "", 10, NA),
      Item = str_replace(label, "_", " "),
      idx = 1:nrow(as.list(dendrogram)$nodes))
  
  # Central node 
  nodes[nodes$height == max(nodes$height), c("Item", "Size")] <- data.frame(Item="Central", Size=15)
  
  # Process Edges
  edges <- as.list(dendrogram)$edges
  edges$linewidth = datawizard::rescale(nodes[edges$from, ]$height, to = c(0.1, 1))
  
  p <- tidygraph::tbl_graph(nodes = nodes, edges = edges) |> 
    ggraph(layout = "dendrogram", circular = TRUE) +
    # geom_edge_diagonal(strength = 0.7, linewidth = 1) +
    geom_edge_elbow2(aes(edge_width=linewidth), color="#212121") +
    geom_node_point(aes(filter=Item %in% c("Central"), size = Size), color="#212121") +
    # geom_node_point(aes(filter=Group %in% c("Visceroception", "Awareness", "Deficit"), color=Group, size = Size)) +
    geom_node_text(aes(
      label = ifelse(Item != "", Item, NA),
      x = x * 1.10,
      y = y * 1.10,
      filter = label != "",
      angle = ifelse(
        x >= 0,
        asin(y) * 360 / 2 / pi,
        360 - asin(y) * 360 / 2 / pi
      ),
      hjust = ifelse(
        x >= 0, 0, 1
      ))) +
    geom_node_point(aes(filter = label != "", color=Item, size=Size), alpha = 1) +
    # geom_node_text(aes(label=idx)) +  # Debug
    scale_edge_width_continuous(range=c(1, 3), guide = "none") +
    scale_size_continuous(range=c(10, 10), guide = "none") +
    scale_color_manual(values = colors,
                       breaks = names(colors)) +
    ggtitle("Hierarchical Clustering Analysis (HCA)", subtitle = "Method = Correlation") +
    coord_equal(clip = "off", xlim = c(-1.25, 1.25), ylim = c(-1.25, 1.25)) +
    theme_void() + 
    # guides(color = guide_legend(override.aes = list(size = c(7.5, 5, 5, 3.5, 7.5, 5, 5, 3.5, 3.5, 3.5, 7.5, 5, 5, 3.5)))) +
    theme(legend.text = ggtext::element_markdown(),
          legend.title = element_blank(),
          legend.position = "none",
          # plot.title = element_blank(), 
          # plot.subtitle = element_blank()
          plot.title = element_text(face="bold"))

  
  list(pvclust = rez_pvclust, p = p)
}


rez_hclust <- make_hclust(data_all)
plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)
rez_hclust$p
```

##### EGA

```{r}
#| message: false
#| warning: false
#| fig.width: 8
#| fig.height: 12

make_ega <- function(data, cols = c("C1" = "#F44336", "C2" = "#FF9800", "C3" = "#795548", "C4" = "#CDDC39", "C5" = "#2196F3", "C6" = "#009688", "C7" = "#9C27B0")) {
  rez <- EGAnet::bootEGA(
    data = data,
    seed = 123,
    model = "glasso",
    algorithm = "leiden",
    EGA.type = "hierEGA",
    type = "resampling",
    plot.itemStability = FALSE,
    verbose = FALSE, 
    allow.singleton = TRUE,
    loading.method = "original"
  )
  
  table <- EGAnet::net.loads(rez$EGA$lower_order)$std |> 
    as.data.frame() |> 
    rownames_to_column("Item") |>
    gt::gt() |>
    gt::tab_header(title = "EGA Loadings") |>
    gt::data_color(
      columns = -Item,
      method = "numeric",
      colors = scales::col_numeric(
        palette = c("red", "white", "green"),
        domain = c(-1, 0, 1)
      )) |> 
    gt::fmt_auto()
  
    
  nodes <- rez$EGA$lower_order$dim.variables |> 
    rename(name = items) |> 
    mutate(dimension = paste0("C", dimension),
           size = apply(EGAnet::net.loads(rez$EGA$lower_order)$std, 1, max)[name])
  
  loadings <- rez$EGA$lower_order$network |> 
    as.data.frame() |> 
    rownames_to_column("to") |>
    pivot_longer(-c(to), names_to = "from", values_to = "Loading") |> 
    filter(Loading > quantile(Loading, 1/3)) 
  
  g <- tidygraph::tbl_graph(nodes = nodes, edges = loadings, directed = FALSE) |> 
    mutate(name = str_replace(name, "_", " "),
           name = ifelse(name == "Sex arousal", "Sex", name)) 
  
  set.seed(1)
  layout <- ggraph::create_layout(g, layout = "fr", weights = abs(loadings$Loading))
  
  xrange <- max(layout$x) - min(layout$x)
  yrange <- max(layout$y) - min(layout$y)
  xmin <- min(layout$x) - xrange * 0.05
  xmax <- max(layout$x) + xrange * 0.05
  ymin <- min(layout$y) - yrange * 0.05
  ymax <- max(layout$y) + yrange * 0.05
  
  p <- layout |> 
    ggraph() +
    geom_edge_bend(aes(edge_width = Loading, edge_alpha = Loading), color = "#212121",
                   strength = 0.3) +
    geom_node_point(aes(size = size, color = dimension), alpha = 0.95) +
    geom_node_text(aes(label = name), size = 3, color = "white", fontface = "bold") +
    scale_size_continuous(range = c(23, 28)) +
    scale_edge_width(range = c(0.3, 4)) +
    scale_edge_alpha(range = c(0.1, 0.9)) +
    scale_color_manual(values = cols) +
    labs(title = "Exploratory Graph Analysis (EGA)", subtitle = "Method = Leiden") +
    theme_void() +
    theme(legend.position = "none",
          plot.title = element_text(face="bold")) +
    coord_cartesian(xlim =c(xmin, xmax), ylim = c(ymin, ymax)) 
    
  list(rez = rez, table = table, p = p)
}

rez_ega <- make_ega(data_all, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]]))

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table
rez_ega$p
```

##### EFA

```{r}
#| fig.width: 8
#| fig.height: 12


make_efa <- function(data, n = 3, cols = c("F1" = "#009688", "F2" = "#795548", "F3" = "red")) {
  n_fac <- n_factors(data)

  rez_efa <- factor_analysis(data, n = n, sort = TRUE, rotation = "oblimin")
  
  # Exctract loadings
  loadings <- attributes(rez_efa)$loadings_long |> 
    select(from = Component, to=Variable, Loading) |> 
    mutate(Type = "Loading",
           to = str_replace(to, "_", " "),
           from = str_replace(from, "MR", "F")) 
  
  # Reorder factors
  fct_order <- c("Pain", "Muscles", "Blood Sugar", "Bruise",
                 "Affective touch", "Sex arousal", "Temp", "Itch", "Tickle", 
                 "Thirsty", "Hungry", "Breathing", "Heart", "Defecate", "Urinate",
                 "Sneeze", "Cough",  "Wind", "Burp", "Vomit", "Taste")
  loadings <- loadings |> 
    mutate(to = fct_relevel(to, fct_order[fct_order %in% unique(loadings$to)])) |> 
    arrange(to) |> 
    mutate(to = as.character(to))

  # Get correlations between factors
  phi <- attributes(rez_efa)$model$Phi
  phi[upper.tri(phi, diag = TRUE)] <- NA
  phi <- phi |> 
    as.data.frame() |> 
    rownames_to_column("from") %>%
    pivot_longer(-from, names_to = "to", values_to = "Loading") |> 
    filter(!is.na(Loading)) |>
    mutate(Type = "Correlation",
           from = str_replace(from, "MR", "F"),
           to = str_replace(to, "MR", "F")) 
  
  # Reverse so that arcs are on the same side
  phi[paste(phi$from, phi$to) %in% c("F3 F1"), c("from", "to")] <- data.frame(from = "F1", to = "F3")
  phi[paste(phi$from, phi$to) %in% c("F2 F1"), c("from", "to")] <- data.frame(from = "F1", to = "F2")
  phi[paste(phi$from, phi$to) %in% c("F3 F2"), c("from", "to")] <- data.frame(from = "F2", to = "F3")
  phi[paste(phi$from, phi$to) %in% c("F4 F1"), c("from", "to")] <- data.frame(from = "F1", to = "F4")
  phi[paste(phi$from, phi$to) %in% c("F4 F2"), c("from", "to")] <- data.frame(from = "F2", to = "F4")
  phi[paste(phi$from, phi$to) %in% c("F4 F3"), c("from", "to")] <- data.frame(from = "F3", to = "F4")
  
  loadings <- rbind(loadings, phi)
  
  # Make layout
  factor_names <- unique(loadings$from[loadings$Type == "Loading"])
  item_names <- unique(loadings$to[loadings$Type == "Loading"])
  
  nodes <- tibble(name = unique(c(loadings$from, loadings$to))) |>
    mutate(type = case_when(
      name %in% factor_names ~ "Factor",
      name %in% item_names ~ "Item",
      TRUE ~ "Other"
    ))
  
  y_position <- seq(0.8, 0.2, length.out = length(factor_names))
  
  layout <- nodes |>
    mutate(x = ifelse(type == "Item", 0, 1),
           y = case_when(
            name == "F1" ~ y_position[1],
            name == "F2" ~ y_position[2],
            name == "F3" ~ y_position[3],
            name == "F4" ~ y_position[4],
            name == "F5" ~ y_position[5],
            name == "F6" ~ y_position[6],
            name == "F7" ~ y_position[7],
            name == "F8" ~ y_position[8],
            .default = NA
          ))
  layout[layout$type == "Item", "y"] <- seq(0, 1, length.out = sum(layout$type == "Item"))
  
  
  g <- tidygraph::as_tbl_graph(loadings, directed = TRUE) |>
    left_join(layout, by = c("name"))
  
  p_efa <- ggraph(g, layout = as.data.frame(layout)[c("x", "y")]) + 
    geom_edge_link(
      aes(
        edge_width = abs(Loading),
        edge_alpha = abs(Loading),
        # edge_color = Loading,
        filter = Type == "Loading"
        # label = insight::format_value(Loading, lead_zero = FALSE, zap_small = TRUE)
      ),
      color = "#212121",
      arrow = arrow(length = unit(2.5, "mm"), type = "closed"),
      end_cap = circle(5, 'mm')
    ) +
      geom_edge_arc(
      aes(
        edge_width = abs(Loading),
        filter = Type == "Correlation",
        label = insight::format_value(Loading, lead_zero = FALSE, zap_small = TRUE)
      ),
      edge_color = "forestgreen",
      angle_calc = "along",
      label_dodge = unit(2.5, "mm"),
      force_flip = TRUE,
      strength = 0.2  # controls curvature
    ) +
    geom_node_label(data=filter(layout, type == "Item"), 
                    aes(fill = name), 
                    label = paste(rep(" ", 20), collapse = ""),
                    size = 3, 
                    hjust = 0.5, 
                    nudge_x = -0.05,
                    label.r = unit(0.2, "lines"),
                    label.padding = unit(0.5, "lines"),
                    label.size = 0) +
    geom_node_label(data=filter(layout, type == "Item"), 
                    aes(label = name), 
                    fill = NA,
                    size = 3, 
                    hjust = 0.5, 
                    vjust = 0.5,
                    color = "white",
                    fontface = "bold",
                    nudge_x = -0.05,
                    label.size = 0) +
    geom_node_point(data=filter(layout, type == "Factor"), 
                    aes(color = name), 
                    size = 12) +
    geom_node_text(data=filter(layout, type == "Factor"), 
                   aes(label = name), 
                   size = 4, 
                   color = "white", 
                   fontface = "bold") +
    scale_edge_width(range = c(0.3, 2)) +
    scale_edge_alpha(range = c(0.1, 1)) +
    scale_fill_manual(values = colors) +
    scale_color_manual(values = cols) +
    labs(title = "Exploratory Factor Analysis (EFA)", subtitle = "Method = Oblimin") +
    theme_void() +
    theme(legend.position = "none",
          plot.title = element_text(face="bold")) +
    coord_cartesian(xlim = c(-0.08, 1.08)) 

  list(n_fac=n_fac, efa=rez_efa, p=p_efa)
}


rez_efa <- make_efa(data_all, n = 3, cols = c("F1" = colors[["Wind"]], 
                                              "F2" = colors[["Defecate"]], 
                                              "F3" = colors[["Heart"]]))
plot(rez_efa$n_fac)
rez_efa$p
```


:::


#### Final

We discarded:

- Taste: Lone item + unstable
- Affective_touch: Cross-loadings + unstable
- Vomit: Less strongly associated
- Itch: Less strongly associated, did not form consistent cluster
- More controversial: Temp and Sex_arousal: similar cluster yet less reliable


```{r}
#| code-fold: false

data_allf <- select(data_all, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data1af <- select(data1a, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data1bf <- select(data1b, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data2f <- select(data2, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data3f <- select(data3, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data4f <- select(data4, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data5f <- select(data5, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data6f <- select(data6, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data7af <- select(data7a, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data7bf <- select(data7b, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data7cf <- select(data7c, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data8af <- select(data8a, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data8bf <- select(data8b, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data9f <- select(data9, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data10f <- select(data10, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data11f <- select(data11, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data12f <- select(data12, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data13f <- select(data13, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data14f <- select(data14, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data15f <- select(data15, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
data16f <- select(data16, -Taste, -Affective_touch, -Vomit, -Itch,
                   -Sex_arousal, -Temp)
```

::: {.panel-tabset}

##### HCA

```{r}
#| warning: false
#| message: false
#| fig.width: 8
#| fig.height: 12

rez_hclust <- make_hclust(data_allf)

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

rez_hclust$p
```

##### EGA

```{r}
#| warning: false
#| message: false
#| fig.width: 8
#| fig.height: 12

rez_ega <- make_ega(data_allf, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table
rez_ega$p
```

##### EFA

```{r}
#| fig.width: 8
#| fig.height: 12

rez_efa <- make_efa(data_allf, n = 3, cols = 
                      c("F1" = colors[["Wind"]], "F2" = colors[["Defecate"]], 
                        "F3" = colors[["Heart"]]))
plot(rez_efa$n_fac)
rez_efa$p
```


##### CFA

```{r}
#| fig-height: 20
#| fig-width: 12

make_cfa <- function(data) {
  
  # Main models
  m_g <- '
IAS =~ Burp + Wind + Cough + Sneeze + Hungry + Thirsty  + Urinate + Defecate + Heart + Breathing + Pain + Muscles 
  '
  m_ega <- '
    CoughSneeze =~ Cough + Sneeze
    UrinateDefecate =~ Urinate + Defecate
    BruiseBloodsugar =~ Bruise + Blood_Sugar
    WindBurp =~ Wind + Burp
    HeartBreath =~ Heart + Breathing
    MusclesPain =~ Muscles + Pain
    HungryThirsty =~ Hungry + Thirsty
  '
  
  m_efa <- '
    UrinateDefecate =~ Urinate + Defecate
    Sudden =~ Cough + Sneeze + Wind + Burp
    Homeostasis =~ Heart + Breathing + Muscles + Pain + Hungry + Thirsty + Bruise + Blood_Sugar
  '
    
    
  m_hclust <- '
    HeartBreath =~ Heart + Breathing
    BruiseBloodsugar =~ Bruise + Blood_Sugar
    HungryThirsty =~ Hungry + Thirsty
    Sudden =~ Cough + Sneeze + Wind + Burp
    Unpleasant =~ Urinate + Defecate + Muscles + Pain
  '
  
  # Test bifactor models
  m_egag <- paste0(m_ega, "\nIAS =~ CoughSneeze + WindBurp + BruiseBloodsugar + UrinateDefecate + HeartBreath + MusclesPain")
  m_efag <- paste0(m_efa, "\nIAS =~ UrinateDefecate + Sudden + Homeostasis")
  m_hclustg <- paste0(m_hclust, "\nIAS =~ HeartBreath + BruiseBloodsugar + HungryThirsty + Sudden + Unpleasant")

  fit_g <- lavaan::cfa(m_g, data = data, std.lv = TRUE)
  fit_ega <- lavaan::cfa(m_ega, data = data, std.lv = TRUE)
  fit_egag <- lavaan::cfa(m_egag, data = data, std.lv = TRUE)
  fit_efa <- lavaan::cfa(m_efa, data = data, std.lv = TRUE)
  fit_efag <- lavaan::cfa(m_efag, data = data, std.lv = TRUE)
  fit_hclust <- lavaan::cfa(m_hclust, data = data, std.lv = TRUE)
  fit_hclustg <- lavaan::cfa(m_hclustg, data = data, std.lv = TRUE)
  
  # Test
  bf <- test_bf(fit_ega, fit_g, fit_egag, fit_efa, fit_efag, fit_hclust, fit_hclustg) |> 
    as.data.frame() |> 
    select(Name = Model, BF)
  
  # test <- lavaan::lavTestLRT(fit_g, fit_ega, fit_egag, fit_efa, fit_efag, fit_hclust, fit_hclustg)
  test <- compare_performance(fit_g, fit_ega, fit_egag, fit_efa, fit_efag, fit_hclust, fit_hclustg,
                      metrics = c("BIC", "RMSEA", "Chi2", "CFI")) |> 
    select(-BIC_wt, -Model) |> 
    merge(bf, by = "Name") |>
    arrange(BIC) |> 
    gt::gt() |> 
    gt::tab_header(title = "CFA Model Comparison") |>
    gt::data_color(
      columns = c(BIC, Chi2, RMSEA),
      method = "numeric",
      palette = c("green", "white")) |>
    gt::data_color(
      columns = c(CFI),
      method = "numeric",
      palette = c("white", "green")) |>
    gt::data_color(
      columns = c(BF),
      method = "numeric",
      palette = c("red", "yellow", "white", "yellow", "green"),
      domain = c(0, 0.3, 1, 3, 10000000)) |>
    gt::fmt_number(columns = c(RMSEA, Chi2, CFI), decimals = 3) 

  
  param  <- parameters::parameters(fit_ega)
  perf <- performance::performance(fit_ega)
  
  # Graph
  nodes <- tidySEM::get_nodes(fit_ega) |> 
    mutate(name = str_replace(name, "_", " "))
  edges <- tidySEM::get_edges(fit_ega) |> 
    mutate(from = str_replace(from, "_", " "),
           to = str_replace(to, "_", " "), 
           est_std = as.numeric(est_std)) |> 
    filter(from != to)
  
  g <- tidygraph::tbl_graph(nodes = nodes, edges = edges, directed = TRUE) 
  set.seed(1)
  layout <- ggraph::create_layout(g, layout = "fr", weights = est_std)
  
  p_cfa <- ggraph(layout) +
    geom_edge_bend(aes(edge_width = abs(est_std), edge_alpha = abs(est_std),
                       label = format_value(est_std, zap_small = TRUE, lead_zero = FALSE),
                       filter = arrow == "none"), 
                   color = "forestgreen",
                   angle_calc = "along", 
                   check_overlap = TRUE,
                   label_dodge = unit(0, "mm"),
                   label_size = unit(3, "mm"),
                   strength = 0.3) +
    geom_edge_link(aes(edge_width = abs(est_std), edge_color = abs(est_std), 
                       label = format_value(est_std, zap_small = TRUE, lead_zero = FALSE),
                      filter = arrow != "none"), 
                   angle_calc = "along", 
                   label_dodge = unit(3, "mm"),
                   arrow = arrow(length = unit(2.5, "mm"), type = "open", ends = "first"), 
                   lineend = "round",
                   linejoin = "bevel",
                   start_cap = circle(9, 'mm')) +
    geom_node_point(aes(color = name, shape=shape), alpha = 0.97, size = 20) +
    geom_node_text(data = filter(layout, shape == "rect"), aes(label = name), 
                   size = 3, color = "white", fontface = "bold") +
    scale_size_continuous(range = c(10, 20)) +
    scale_edge_width(range = c(0.3, 4)) +
    scale_edge_alpha(range = c(0.1, 0.9)) +
    scale_edge_color_gradient(low = "#EEEEEE", high = "#212121") +
    scale_color_manual(values = c(colors, 
                               "CoughSneeze" = "#CDDC39", 
                               "UrinateDefecate" = "#795548", "BruiseBloodsugar" = "#673AB7",
                               "WindBurp" = "#009688", "HeartBreath" = "#F44336",
                               "MusclesPain" = "#2196F3", "HungryThirsty" = "#FF9800")) +
    scale_shape_manual(values = c("oval" = 16, "rect" = 15)) +
    labs(title = "Confirmatory Factor Analysis (CFA)", subtitle = "Method = Maximum Likelihood") +
    theme_void() +
    theme(legend.position = "none",
          plot.title = element_text(face="bold"))
  p_cfa
  
  list(test = test, param = param, perf = perf, p=p_cfa)
}


rez_cfa0 <- make_cfa(data_allf)
rez_cfa0$test
rez_cfa0$perf
rez_cfa0$param
rez_cfa0$p
```


:::

#### Figure

The structural analysis seem to converge on the idea of small clusters (of pairs or triplets) that are potentially inter-related parts of larger clusters (although with unstable associations).
Best way to assess the values of this new granular structure is to assess its predictive value against convergent measures, and see if it's superior to a unique score (-> Study 2).



```{r}
#| eval: false

fig2 <- (rez_hclust$p | rez_ega$p) / (rez_efa$p | rez_cfa0$p) 
ggsave("figures/Figure2.png", fig2, width=14, height=14, dpi=300, bg="white")
```


## Structure Invariance 

::: {.panel-tabset}

### Sample 1a

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data1a)
rez_ega <- make_ega(data1a, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data1a, n = 4, cols = c("F1" = colors[["Itch"]], "F2" = colors[["Burp"]], "F3" = colors[["Defecate"]], "F4" = colors[["Hungry"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data1af)
rez_ega <- make_ega(data1af, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data1af, n = 3, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Urinate"]], "F3" = colors[["Bruise"]]))
rez_cfa1a  <- make_cfa(data1af)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa1a$test
```

::::

### Sample 1b

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data1b)
rez_ega <- make_ega(data1b, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Defecate"]], "C3" = colors[["Bruise"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Temp"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data1b, n = 4, cols = c("F1" = colors[["Urinate"]], "F2" = colors[["Bruise"]], 
                                            "F3" = colors[["Sneeze"]], "F4" = colors[["Wind"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

Note: CFA did not converge

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data1bf)
rez_ega <- make_ega(data1af, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data1bf, n = 3, cols = c("F1" = colors[["Urinate"]], "F2" = colors[["Bruise"]], 
                                            "F3" = colors[["Cough"]], "F4" = colors[["Itch"]]))
# rez_cfa1b  <- make_cfa(data1bf)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

# rez_cfa1b$test
```

::::

### Sample 2

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data2)
rez_ega <- make_ega(data2, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Urinate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Pain"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data2, n = 4, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Bruise"]], 
                                            "F3" = colors[["Heart"]], "F4" = colors[["Sex arousal"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

Note: CFA did not converge

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data2f)
rez_ega <- make_ega(data2f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data2f, n = 3, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Bruise"]], 
                                            "F3" = colors[["Hungry"]]))
# rez_cfa2  <- make_cfa(data2f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

# rez_cfa2$test
```

::::

### Sample 3

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data3}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data3)
rez_ega <- make_ega(data3, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Urinate"]], "C3" = colors[["Pain"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Bruise"]], "C7" = colors[["Muscles"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data3, n = 4, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Urinate"]], 
                                            "F3" = colors[["Blood Sugar"]], "F4" = colors[["Sex arousal"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data3_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

Note: CFA did not converge


```{r data3f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data3f)
rez_ega <- make_ega(data3f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Urinate"]], "C3" = colors[["Sneeze"]], "C4" = colors[["Wind"]], 
  "C5" = colors[["Pain"]], "C6" = colors[["Bruise"]], "C7" = colors[["Muscles"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data3f, n = 3, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Hungry"]], 
                                            "F3" = colors[["Blood Sugar"]]))
# rez_cfa3  <- make_cfa(data3f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data3f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

# rez_cfa3$test
```

::::

### Sample 4

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data4}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data4)
rez_ega <- make_ega(data4, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Pain"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Affective touch"]]))
rez_efa <- make_efa(data4, n = 4, cols = c("F1" = colors[["Wind"]], "F2" = colors[["Itch"]], 
                                            "F3" = colors[["Breathing"]], "F4" = colors[["Urinate"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data4_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data4f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data4f)
rez_ega <- make_ega(data4f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data4f, n = 3, cols = c("F1" = colors[["Wind"]], "F2" = colors[["Breathing"]], 
                                            "F3" = colors[["Urinate"]]))
rez_cf4  <- make_cfa(data4f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data4f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cf4$test
```

::::

### Sample 5

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data5}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data5)
rez_ega <- make_ega(data5, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Sneeze"]], "C3" = colors[["Vomit"]], "C4" = colors[["Cough"]], 
  "C5" = colors[["Defecate"]], "C6" = colors[["Muscles"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data5, n = 8, cols = c("F1" = colors[["Urinate"]], "F2" = colors[["Itch"]], 
                                            "F3" = colors[["Burp"]], "F4" = colors[["Hungry"]], 
                                           "F5" = colors[["Affective touch"]], "F6" = colors[["Breathing"]], "F7" = colors[["Sex arousal"]], "F8" = colors[["Taste"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data5_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

Note: EGA errors.
Note: CFA did not converge


```{r data5f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data5f)
# rez_ega <- make_ega(data5f, cols = c(
#   "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
#   "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data5f, n = 5, cols = c("F1" = colors[["Urinate"]], "F2" = colors[["Burp"]], 
                                            "F3" = colors[["Wind"]], "F4" = colors[["Thirsty"]],
                                            "F5" = colors[["Sneeze"]]))
# rez_cfa5  <- make_cfa(data5f)

rez_hclust$p / rez_efa$p
```

##### Details

```{r data5f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

plot(rez_efa$n_fac)

# rez_cfa5$test
```

::::

### Sample 6

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data6}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data6)
rez_ega <- make_ega(data6, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Itch"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data6, n = 3, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Defecate"]], 
                                            "F3" = colors[["Hungry"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data6_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data6f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data6f)
rez_ega <- make_ega(data6f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Bruise"]], "C7" = colors[["Pain"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data6f, n = 3, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Defecate"]], 
                                            "F3" = colors[["Thirsty"]]))
rez_cfa6  <- make_cfa(data6f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data6f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa6$test
```

::::

### Sample 7a

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data7a}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data7a)
rez_ega <- make_ega(data7a, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Defecate"]], "C3" = colors[["Itch"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Bruise"]], "C7" = colors[["Pain"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data7a, n = 4, cols = c("F1" = colors[["Pain"]], "F2" = colors[["Sneeze"]], 
                                            "F3" = colors[["Burp"]], "F4" = colors[["Urinate"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data7a_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data7af}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data7af)
rez_ega <- make_ega(data7af, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Pain"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Bruise"]], "C7" = colors[["Burp"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data7af, n = 4, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Pain"]], 
                                            "F3" = colors[["Sneeze"]], "F4" = colors[["Urinate"]]))
rez_cf7a  <- make_cfa(data7af)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data7af_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cf7a$test
```

::::

### Sample 7b

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data7b}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data7b)
rez_ega <- make_ega(data7b, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Pain"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data7b, n = 4, cols = c("F1" = colors[["Wind"]], "F2" = colors[["Urinate"]], 
                                            "F3" = colors[["Heart"]], "F4" = colors[["Sneeze"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data7b_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data7bf}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data7bf)
rez_ega <- make_ega(data7bf, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data7bf, n = 3, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Urinate"]], 
                                            "F3" = colors[["Breathing"]]))
rez_cfa7b  <- make_cfa(data7bf)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data7bf_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa7b$test
```

::::

### Sample 7c

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data7c}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data7c)
rez_ega <- make_ega(data7c, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Pain"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Sex arousal"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data7c, n = 3, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Urinate"]], 
                                            "F3" = colors[["Bruise"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data7c_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data7cf}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data7cf)
rez_ega <- make_ega(data7cf, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data7cf, n = 4, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Hungry"]], 
                                            "F3" = colors[["Bruise"]], "F4" = colors[["Breathing"]]))
rez_cfa7c  <- make_cfa(data7cf)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data7cf_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa7c$test
```

::::

### Sample 8a

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data8a}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data8a)
rez_ega <- make_ega(data8a, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Bruise"]], "C7" = colors[["Itch"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data8a, n = 5, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Thirsty"]], 
                                            "F3" = colors[["Bruise"]], "F4" = colors[["Heart"]], "F5" = colors[["Urinate"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data8a_details}
#| message: false
#| warning: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data8af}
#| message: false
#| warning: false
#| fig-height: 20
#| fig-width: 12

rez_hclust <- make_hclust(data8af)
rez_ega <- make_ega(data8af, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Bruise"]], "C7" = colors[["Pain"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data8af, n = 4, cols = c("F1" = colors[["Cough"]], "F2" = colors[["Thirsty"]], 
                                            "F3" = colors[["Bruise"]], "F4" = colors[["Heart"]]))
rez_cfa8a  <- make_cfa(data8af)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data8af_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa8a$test
```
::::

### Sample 8b

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data8b}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data8b)
rez_ega <- make_ega(data8b, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Cough"]], 
  "C5" = colors[["Pain"]], "C6" = colors[["Bruise"]], "C7" = colors[["Itch"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data8b, n = 5, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Thirsty"]], 
                                            "F3" = colors[["Breathing"]], "F4" = colors[["Bruise"]], "F5" = colors[["Urinate"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data8b_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data8bf}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data8bf)
rez_ega <- make_ega(data8bf, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Cough"]], 
  "C5" = colors[["Pain"]], "C6" = colors[["Bruise"]], "C7" = colors[["Itch"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data8bf, n = 4, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Heart"]], 
                                            "F3" = colors[["Thirsty"]], "F4" = colors[["Bruise"]]))
rez_cfa8b  <- make_cfa(data8bf)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data8bf_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa8b$test
```
::::

### Sample 9

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data9}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data9)
rez_ega <- make_ega(data9, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data9, n = 3, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Thirsty"]], 
                                            "F3" = colors[["Bruise"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data9_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data9f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data9f)
rez_ega <- make_ega(data9f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data9f, n = 3, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Urinate"]], 
                                            "F3" = colors[["Pain"]]))
rez_cfa9  <- make_cfa(data9f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data9f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa9$test
```
::::

### Sample 10

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data10}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data10)
rez_ega <- make_ega(data10, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Bruise"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data10, n = 4, cols = c("F1" = colors[["Hungry"]], "F2" = colors[["Defecate"]], 
                                            "F3" = colors[["Itch"]], "F4" = colors[["Breathing"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data10_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

Note: No CFA (missing items)

```{r data10f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data10f)
rez_ega <- make_ega(data10f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Wind"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data10f, n = 3, cols = c("F1" = colors[["Breathing"]], "F2" = colors[["Defecate"]], 
                                            "F3" = colors[["Hungry"]]))
# rez_cfa10  <- make_cfa(data10f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data10f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

# rez_cfa10$test
```
::::

### Sample 11

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data11}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data11)
rez_ega <- make_ega(data11, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Bruise"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data11, n = 4, cols = c("F1" = colors[["Hungry"]], "F2" = colors[["Wind"]], 
                                            "F3" = colors[["Bruise"]], "F4" = colors[["Breathing"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data11_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data11f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data11f)
rez_ega <- make_ega(data11f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Bruise"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Pain"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data11f, n = 3, cols = c("F1" = colors[["Wind"]], "F2" = colors[["Hungry"]], 
                                            "F3" = colors[["Breathing"]]))
rez_cfa11  <- make_cfa(data11f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data11f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa11$test
```
::::

### Sample 12

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data12}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data12)
rez_ega <- make_ega(data12, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Bruise"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data12, n = 2, cols = c("F1" = colors[["Urinate"]], "F2" = colors[["Bruise"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data12_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

Note: CFA errors.

```{r data12f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data12f)
rez_ega <- make_ega(data8af, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Bruise"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data12f, n = 5, cols = c("F1" = colors[["Urinate"]], "F2" = colors[["Burp"]], 
                                             "F3" = colors[["Heart"]], "F4" = colors[["Pain"]], "F5" = colors[["Sneeze"]]))
# rez_cfa12  <- make_cfa(data12f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data12f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

# rez_cfa12$test
```
::::

### Sample 13

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data13}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data13)
rez_ega <- make_ega(data13, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Sex arousal"]], "C6" = colors[["Sneeze"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data13, n = 4, cols = c("F1" = colors[["Thirsty"]], "F2" = colors[["Heart"]], 
                                            "F3" = colors[["Burp"]], "F4" = colors[["Bruise"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data13_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data13f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data13f)
rez_ega <- make_ega(data13f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Bruise"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data13f, n = 4, cols = c("F1" = colors[["Thirsty"]], "F2" = colors[["Heart"]], 
                                            "F3" = colors[["Burp"]], "F4" = colors[["Bruise"]]))
rez_cfa13  <- make_cfa(data13f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data13f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa13$test
```
::::

### Sample 14

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data14}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data14)
rez_ega <- make_ega(data14, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data14, n = 7, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Thirsty"]], 
                                            "F3" = colors[["Bruise"]], "F4" = colors[["Temp"]], 
                                            "F5" = colors[["Pain"]], "F6" = colors[["Sneeze"]],
                                            "F7" = colors[["Heart"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data14_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r data14f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data14f)
rez_ega <- make_ega(data14f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Wind"]], "C6" = colors[["Pain"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data14f, n = 5, cols = c("F1" = colors[["Burp"]], "F2" = colors[["Defecate"]], 
                                             "F3" = colors[["Thirsty"]], "F4" = colors[["Heart"]], 
                                             "F5" = colors[["Muscles"]]))
rez_cfa14  <- make_cfa(data14f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data14f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

rez_cfa14$test
```
::::

### Sample 15

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r data15}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data15)
rez_ega <- make_ega(data15, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Sex arousal"]], "C4" = colors[["Sneeze"]], 
  "C5" = colors[["Muscles"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data15, n = 3, cols = c("F1" = colors[["Sneeze"]], "F2" = colors[["Hungry"]], 
                                            "F3" = colors[["Bruise"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data15_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

Note: CFA errors.


```{r data15f}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data15f)
rez_ega <- make_ega(data15f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Sneeze"]], "C4" = colors[["Wind"]], 
  "C5" = colors[["Bruise"]], "C6" = colors[["Wind"]], "C7" = colors[["Pain"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data15f, n = 3, cols = c("F1" = colors[["Hungry"]], "F2" = colors[["Burp"]], 
                                            "F3" = colors[["Blood Sugar"]]))
# rez_cfa15  <- make_cfa(data15f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r data15f_details}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

# rez_cfa15$test
```
::::

### Sample 16

#### Initial 

:::: {.panel-tabset}

##### Summary

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data16)
rez_ega <- make_ega(data16, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Bruise"]], "C7" = colors[["Wind"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data16, n = 4, cols = c("F1" = colors[["Thirsty"]], "F2" = colors[["Sneeze"]], 
                                            "F3" = colors[["Blood Sugar"]], "F4" = colors[["Burp"]]))

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)
```

::::

#### Final 

:::: {.panel-tabset}

##### Summary

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 20

rez_hclust <- make_hclust(data16f)
rez_ega <- make_ega(data16f, cols = c(
  "C1" = colors[["Heart"]], "C2" = colors[["Hungry"]], "C3" = colors[["Defecate"]], "C4" = colors[["Muscles"]], 
  "C5" = colors[["Cough"]], "C6" = colors[["Wind"]], "C7" = colors[["Bruise"]], "C8" = colors[["Blood Sugar"]]))
rez_efa <- make_efa(data16f, n = 4, cols = c("F1" = colors[["Thirsty"]], "F2" = colors[["Cough"]], 
                                            "F3" = colors[["Bruise"]], "F4" = colors[["Wind"]]))
# rez_cfa16  <- make_cfa(data16f)

rez_hclust$p / rez_ega$p / rez_efa$p
```

##### Details

```{r}
#| warning: false
#| message: false

plot(rez_hclust$pvclust, hang = -1, cex = 0.5)
pvclust::pvrect(rez_hclust$pvclust, alpha=0.95, max.only=FALSE)

stab <- EGAnet::itemStability(rez_ega$rez)
rez_ega$table

plot(rez_efa$n_fac)

# rez_cfa16$test
```

::::




## Scores

Note the usage of descriptive factor names relating directly to the items to avoid abstraction.

```{r}
#| warning: false
#| eval: true

# Add empirical variables
add_empirical <- function(data, sample = "Sample 1a") {
  x <- data.frame(
    Original = rowMeans(data),
    HungryThirsty = (data$Hungry + data$Thirsty) / 2,
    MusclesPain = (data$Muscles + data$Pain) / 2,
    WindBurp = (data$Wind + data$Burp) / 2,
    UrinateDefecate = (data$Urinate + data$Defecate) / 2,
    BreathingHeart = (data$Heart + data$Breathing) / 2)
  
  if("Blood_Sugar" %in% names(data)) {
    x$BruiseBlood <- (data$Blood_Sugar + data$Bruise) / 2
  } else {
    x$BruiseBlood <- data$Bruise
  }
  
  if("Cough" %in% names(data)) {
    x$CoughSneeze <- (data$Cough + data$Sneeze) / 2
  } else {
    x$CoughSneeze <- data$Sneeze
  }
  x$Sample <- sample
  x
}

scores <- list(
  sample1a = add_empirical(data1a, "Sample 1a"),
  sample1b = add_empirical(data1b, "Sample 1b"),
  sample2 = add_empirical(data2, "Sample 2"),
  sample3 = add_empirical(data3, "Sample 3"),
  sample4 = add_empirical(data4, "Sample 4"),
  sample5 = add_empirical(data5, "Sample 5"),
  sample6 = add_empirical(data6, "Sample 6"),
  sample7a = add_empirical(data7a, "Sample 7a"),
  sample7b = add_empirical(data7b, "Sample 7b"),
  sample7c = add_empirical(data7c, "Sample 7c"),
  sample8a = add_empirical(data8a, "Sample 8a"),
  sample8b = add_empirical(data8b, "Sample 8b"),
  sample9 = add_empirical(data9, "Sample 9"),
  sample10 = add_empirical(data10, "Sample 10"),
  sample11 = add_empirical(data11 , "Sample 11"),
  sample12 = add_empirical(data12 , "Sample 12"),
  sample13 = add_empirical(data13, "Sample 13"),
  sample14 = add_empirical(data14 , "Sample 14 "),
  sample15 = add_empirical(data15 , "Sample 15"),
  sample16 = add_empirical(data16, "Sample 16")
)

save(scores, file = "../data/scores.RData")
```





